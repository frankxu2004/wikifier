// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GoogleProtoBufferPackage/MyProtobuffers/WikipediaProtobuffers.proto

package edu.illinois.cs.cogcomp.wikifier.models;

public final class WikipediaProtobuffers {
  private WikipediaProtobuffers() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class WikiDataSummaryProto extends
      com.google.protobuf.GeneratedMessage {
    // Use WikiDataSummaryProto.newBuilder() to construct.
    private WikiDataSummaryProto() {
      initFields();
    }
    private WikiDataSummaryProto(boolean noInit) {}
    
    private static final WikiDataSummaryProto defaultInstance;
    public static WikiDataSummaryProto getDefaultInstance() {
      return defaultInstance;
    }
    
    public WikiDataSummaryProto getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.internal_static_WikiDataSummaryProto_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.internal_static_WikiDataSummaryProto_fieldAccessorTable;
    }
    
    // required int32 numberOfTitles = 1;
    public static final int NUMBEROFTITLES_FIELD_NUMBER = 1;
    private boolean hasNumberOfTitles;
    private int numberOfTitles_ = 0;
    public boolean hasNumberOfTitles() { return hasNumberOfTitles; }
    public int getNumberOfTitles() { return numberOfTitles_; }
    
    // repeated string tokens = 2;
    public static final int TOKENS_FIELD_NUMBER = 2;
    private java.util.List<java.lang.String> tokens_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.String> getTokensList() {
      return tokens_;
    }
    public int getTokensCount() { return tokens_.size(); }
    public java.lang.String getTokens(int index) {
      return tokens_.get(index);
    }
    
    // repeated int32 tokenFids = 3;
    public static final int TOKENFIDS_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> tokenFids_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Integer> getTokenFidsList() {
      return tokenFids_;
    }
    public int getTokenFidsCount() { return tokenFids_.size(); }
    public int getTokenFids(int index) {
      return tokenFids_.get(index);
    }
    
    // repeated int32 tokensIdfCounts = 4;
    public static final int TOKENSIDFCOUNTS_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Integer> tokensIdfCounts_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Integer> getTokensIdfCountsList() {
      return tokensIdfCounts_;
    }
    public int getTokensIdfCountsCount() { return tokensIdfCounts_.size(); }
    public int getTokensIdfCounts(int index) {
      return tokensIdfCounts_.get(index);
    }
    
    // repeated string possibleCoarseNerTypes = 5;
    public static final int POSSIBLECOARSENERTYPES_FIELD_NUMBER = 5;
    private java.util.List<java.lang.String> possibleCoarseNerTypes_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.String> getPossibleCoarseNerTypesList() {
      return possibleCoarseNerTypes_;
    }
    public int getPossibleCoarseNerTypesCount() { return possibleCoarseNerTypes_.size(); }
    public java.lang.String getPossibleCoarseNerTypes(int index) {
      return possibleCoarseNerTypes_.get(index);
    }
    
    // repeated int32 possibleCoarseNerTypesIds = 6;
    public static final int POSSIBLECOARSENERTYPESIDS_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Integer> possibleCoarseNerTypesIds_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Integer> getPossibleCoarseNerTypesIdsList() {
      return possibleCoarseNerTypesIds_;
    }
    public int getPossibleCoarseNerTypesIdsCount() { return possibleCoarseNerTypesIds_.size(); }
    public int getPossibleCoarseNerTypesIds(int index) {
      return possibleCoarseNerTypesIds_.get(index);
    }
    
    // repeated string possibleTopics = 7;
    public static final int POSSIBLETOPICS_FIELD_NUMBER = 7;
    private java.util.List<java.lang.String> possibleTopics_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.String> getPossibleTopicsList() {
      return possibleTopics_;
    }
    public int getPossibleTopicsCount() { return possibleTopics_.size(); }
    public java.lang.String getPossibleTopics(int index) {
      return possibleTopics_.get(index);
    }
    
    // repeated int32 possibleTopicsIds = 8;
    public static final int POSSIBLETOPICSIDS_FIELD_NUMBER = 8;
    private java.util.List<java.lang.Integer> possibleTopicsIds_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Integer> getPossibleTopicsIdsList() {
      return possibleTopicsIds_;
    }
    public int getPossibleTopicsIdsCount() { return possibleTopicsIds_.size(); }
    public int getPossibleTopicsIds(int index) {
      return possibleTopicsIds_.get(index);
    }
    
    // repeated string unnormalizedCategoryTokens = 9;
    public static final int UNNORMALIZEDCATEGORYTOKENS_FIELD_NUMBER = 9;
    private java.util.List<java.lang.String> unnormalizedCategoryTokens_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.String> getUnnormalizedCategoryTokensList() {
      return unnormalizedCategoryTokens_;
    }
    public int getUnnormalizedCategoryTokensCount() { return unnormalizedCategoryTokens_.size(); }
    public java.lang.String getUnnormalizedCategoryTokens(int index) {
      return unnormalizedCategoryTokens_.get(index);
    }
    
    // repeated string mappingToNormalizedCategoryTokenVersion = 10;
    public static final int MAPPINGTONORMALIZEDCATEGORYTOKENVERSION_FIELD_NUMBER = 10;
    private java.util.List<java.lang.String> mappingToNormalizedCategoryTokenVersion_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.String> getMappingToNormalizedCategoryTokenVersionList() {
      return mappingToNormalizedCategoryTokenVersion_;
    }
    public int getMappingToNormalizedCategoryTokenVersionCount() { return mappingToNormalizedCategoryTokenVersion_.size(); }
    public java.lang.String getMappingToNormalizedCategoryTokenVersion(int index) {
      return mappingToNormalizedCategoryTokenVersion_.get(index);
    }
    
    // repeated string normalizedCategoryTokens = 11;
    public static final int NORMALIZEDCATEGORYTOKENS_FIELD_NUMBER = 11;
    private java.util.List<java.lang.String> normalizedCategoryTokens_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.String> getNormalizedCategoryTokensList() {
      return normalizedCategoryTokens_;
    }
    public int getNormalizedCategoryTokensCount() { return normalizedCategoryTokens_.size(); }
    public java.lang.String getNormalizedCategoryTokens(int index) {
      return normalizedCategoryTokens_.get(index);
    }
    
    // repeated int32 normalizedCategoryTokensIds = 12;
    public static final int NORMALIZEDCATEGORYTOKENSIDS_FIELD_NUMBER = 12;
    private java.util.List<java.lang.Integer> normalizedCategoryTokensIds_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Integer> getNormalizedCategoryTokensIdsList() {
      return normalizedCategoryTokensIds_;
    }
    public int getNormalizedCategoryTokensIdsCount() { return normalizedCategoryTokensIds_.size(); }
    public int getNormalizedCategoryTokensIds(int index) {
      return normalizedCategoryTokensIds_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasNumberOfTitles) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasNumberOfTitles()) {
        output.writeInt32(1, getNumberOfTitles());
      }
      for (java.lang.String element : getTokensList()) {
        output.writeString(2, element);
      }
      for (int element : getTokenFidsList()) {
        output.writeInt32(3, element);
      }
      for (int element : getTokensIdfCountsList()) {
        output.writeInt32(4, element);
      }
      for (java.lang.String element : getPossibleCoarseNerTypesList()) {
        output.writeString(5, element);
      }
      for (int element : getPossibleCoarseNerTypesIdsList()) {
        output.writeInt32(6, element);
      }
      for (java.lang.String element : getPossibleTopicsList()) {
        output.writeString(7, element);
      }
      for (int element : getPossibleTopicsIdsList()) {
        output.writeInt32(8, element);
      }
      for (java.lang.String element : getUnnormalizedCategoryTokensList()) {
        output.writeString(9, element);
      }
      for (java.lang.String element : getMappingToNormalizedCategoryTokenVersionList()) {
        output.writeString(10, element);
      }
      for (java.lang.String element : getNormalizedCategoryTokensList()) {
        output.writeString(11, element);
      }
      for (int element : getNormalizedCategoryTokensIdsList()) {
        output.writeInt32(12, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasNumberOfTitles()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getNumberOfTitles());
      }
      {
        int dataSize = 0;
        for (java.lang.String element : getTokensList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getTokensList().size();
      }
      {
        int dataSize = 0;
        for (int element : getTokenFidsList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getTokenFidsList().size();
      }
      {
        int dataSize = 0;
        for (int element : getTokensIdfCountsList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getTokensIdfCountsList().size();
      }
      {
        int dataSize = 0;
        for (java.lang.String element : getPossibleCoarseNerTypesList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getPossibleCoarseNerTypesList().size();
      }
      {
        int dataSize = 0;
        for (int element : getPossibleCoarseNerTypesIdsList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getPossibleCoarseNerTypesIdsList().size();
      }
      {
        int dataSize = 0;
        for (java.lang.String element : getPossibleTopicsList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getPossibleTopicsList().size();
      }
      {
        int dataSize = 0;
        for (int element : getPossibleTopicsIdsList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getPossibleTopicsIdsList().size();
      }
      {
        int dataSize = 0;
        for (java.lang.String element : getUnnormalizedCategoryTokensList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getUnnormalizedCategoryTokensList().size();
      }
      {
        int dataSize = 0;
        for (java.lang.String element : getMappingToNormalizedCategoryTokenVersionList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getMappingToNormalizedCategoryTokenVersionList().size();
      }
      {
        int dataSize = 0;
        for (java.lang.String element : getNormalizedCategoryTokensList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getNormalizedCategoryTokensList().size();
      }
      {
        int dataSize = 0;
        for (int element : getNormalizedCategoryTokensIdsList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getNormalizedCategoryTokensIdsList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.WikiDataSummaryProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.WikiDataSummaryProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.WikiDataSummaryProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.WikiDataSummaryProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.WikiDataSummaryProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.WikiDataSummaryProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.WikiDataSummaryProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.WikiDataSummaryProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.WikiDataSummaryProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.WikiDataSummaryProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.WikiDataSummaryProto prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.WikiDataSummaryProto result;
      
      // Construct using GeneratedProtobufferCode.WikipediaProtobuffers.WikiDataSummaryProto.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.WikiDataSummaryProto();
        return builder;
      }
      
      protected edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.WikiDataSummaryProto internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.WikiDataSummaryProto();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.WikiDataSummaryProto.getDescriptor();
      }
      
      public edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.WikiDataSummaryProto getDefaultInstanceForType() {
        return edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.WikiDataSummaryProto.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.WikiDataSummaryProto build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.WikiDataSummaryProto buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.WikiDataSummaryProto buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.tokens_ != java.util.Collections.EMPTY_LIST) {
          result.tokens_ =
            java.util.Collections.unmodifiableList(result.tokens_);
        }
        if (result.tokenFids_ != java.util.Collections.EMPTY_LIST) {
          result.tokenFids_ =
            java.util.Collections.unmodifiableList(result.tokenFids_);
        }
        if (result.tokensIdfCounts_ != java.util.Collections.EMPTY_LIST) {
          result.tokensIdfCounts_ =
            java.util.Collections.unmodifiableList(result.tokensIdfCounts_);
        }
        if (result.possibleCoarseNerTypes_ != java.util.Collections.EMPTY_LIST) {
          result.possibleCoarseNerTypes_ =
            java.util.Collections.unmodifiableList(result.possibleCoarseNerTypes_);
        }
        if (result.possibleCoarseNerTypesIds_ != java.util.Collections.EMPTY_LIST) {
          result.possibleCoarseNerTypesIds_ =
            java.util.Collections.unmodifiableList(result.possibleCoarseNerTypesIds_);
        }
        if (result.possibleTopics_ != java.util.Collections.EMPTY_LIST) {
          result.possibleTopics_ =
            java.util.Collections.unmodifiableList(result.possibleTopics_);
        }
        if (result.possibleTopicsIds_ != java.util.Collections.EMPTY_LIST) {
          result.possibleTopicsIds_ =
            java.util.Collections.unmodifiableList(result.possibleTopicsIds_);
        }
        if (result.unnormalizedCategoryTokens_ != java.util.Collections.EMPTY_LIST) {
          result.unnormalizedCategoryTokens_ =
            java.util.Collections.unmodifiableList(result.unnormalizedCategoryTokens_);
        }
        if (result.mappingToNormalizedCategoryTokenVersion_ != java.util.Collections.EMPTY_LIST) {
          result.mappingToNormalizedCategoryTokenVersion_ =
            java.util.Collections.unmodifiableList(result.mappingToNormalizedCategoryTokenVersion_);
        }
        if (result.normalizedCategoryTokens_ != java.util.Collections.EMPTY_LIST) {
          result.normalizedCategoryTokens_ =
            java.util.Collections.unmodifiableList(result.normalizedCategoryTokens_);
        }
        if (result.normalizedCategoryTokensIds_ != java.util.Collections.EMPTY_LIST) {
          result.normalizedCategoryTokensIds_ =
            java.util.Collections.unmodifiableList(result.normalizedCategoryTokensIds_);
        }
        edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.WikiDataSummaryProto returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.WikiDataSummaryProto) {
          return mergeFrom((edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.WikiDataSummaryProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.WikiDataSummaryProto other) {
        if (other == edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.WikiDataSummaryProto.getDefaultInstance()) return this;
        if (other.hasNumberOfTitles()) {
          setNumberOfTitles(other.getNumberOfTitles());
        }
        if (!other.tokens_.isEmpty()) {
          if (result.tokens_.isEmpty()) {
            result.tokens_ = new java.util.ArrayList<java.lang.String>();
          }
          result.tokens_.addAll(other.tokens_);
        }
        if (!other.tokenFids_.isEmpty()) {
          if (result.tokenFids_.isEmpty()) {
            result.tokenFids_ = new java.util.ArrayList<java.lang.Integer>();
          }
          result.tokenFids_.addAll(other.tokenFids_);
        }
        if (!other.tokensIdfCounts_.isEmpty()) {
          if (result.tokensIdfCounts_.isEmpty()) {
            result.tokensIdfCounts_ = new java.util.ArrayList<java.lang.Integer>();
          }
          result.tokensIdfCounts_.addAll(other.tokensIdfCounts_);
        }
        if (!other.possibleCoarseNerTypes_.isEmpty()) {
          if (result.possibleCoarseNerTypes_.isEmpty()) {
            result.possibleCoarseNerTypes_ = new java.util.ArrayList<java.lang.String>();
          }
          result.possibleCoarseNerTypes_.addAll(other.possibleCoarseNerTypes_);
        }
        if (!other.possibleCoarseNerTypesIds_.isEmpty()) {
          if (result.possibleCoarseNerTypesIds_.isEmpty()) {
            result.possibleCoarseNerTypesIds_ = new java.util.ArrayList<java.lang.Integer>();
          }
          result.possibleCoarseNerTypesIds_.addAll(other.possibleCoarseNerTypesIds_);
        }
        if (!other.possibleTopics_.isEmpty()) {
          if (result.possibleTopics_.isEmpty()) {
            result.possibleTopics_ = new java.util.ArrayList<java.lang.String>();
          }
          result.possibleTopics_.addAll(other.possibleTopics_);
        }
        if (!other.possibleTopicsIds_.isEmpty()) {
          if (result.possibleTopicsIds_.isEmpty()) {
            result.possibleTopicsIds_ = new java.util.ArrayList<java.lang.Integer>();
          }
          result.possibleTopicsIds_.addAll(other.possibleTopicsIds_);
        }
        if (!other.unnormalizedCategoryTokens_.isEmpty()) {
          if (result.unnormalizedCategoryTokens_.isEmpty()) {
            result.unnormalizedCategoryTokens_ = new java.util.ArrayList<java.lang.String>();
          }
          result.unnormalizedCategoryTokens_.addAll(other.unnormalizedCategoryTokens_);
        }
        if (!other.mappingToNormalizedCategoryTokenVersion_.isEmpty()) {
          if (result.mappingToNormalizedCategoryTokenVersion_.isEmpty()) {
            result.mappingToNormalizedCategoryTokenVersion_ = new java.util.ArrayList<java.lang.String>();
          }
          result.mappingToNormalizedCategoryTokenVersion_.addAll(other.mappingToNormalizedCategoryTokenVersion_);
        }
        if (!other.normalizedCategoryTokens_.isEmpty()) {
          if (result.normalizedCategoryTokens_.isEmpty()) {
            result.normalizedCategoryTokens_ = new java.util.ArrayList<java.lang.String>();
          }
          result.normalizedCategoryTokens_.addAll(other.normalizedCategoryTokens_);
        }
        if (!other.normalizedCategoryTokensIds_.isEmpty()) {
          if (result.normalizedCategoryTokensIds_.isEmpty()) {
            result.normalizedCategoryTokensIds_ = new java.util.ArrayList<java.lang.Integer>();
          }
          result.normalizedCategoryTokensIds_.addAll(other.normalizedCategoryTokensIds_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setNumberOfTitles(input.readInt32());
              break;
            }
            case 18: {
              addTokens(input.readString());
              break;
            }
            case 24: {
              addTokenFids(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addTokenFids(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              addTokensIdfCounts(input.readInt32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addTokensIdfCounts(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 42: {
              addPossibleCoarseNerTypes(input.readString());
              break;
            }
            case 48: {
              addPossibleCoarseNerTypesIds(input.readInt32());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addPossibleCoarseNerTypesIds(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 58: {
              addPossibleTopics(input.readString());
              break;
            }
            case 64: {
              addPossibleTopicsIds(input.readInt32());
              break;
            }
            case 66: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addPossibleTopicsIds(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 74: {
              addUnnormalizedCategoryTokens(input.readString());
              break;
            }
            case 82: {
              addMappingToNormalizedCategoryTokenVersion(input.readString());
              break;
            }
            case 90: {
              addNormalizedCategoryTokens(input.readString());
              break;
            }
            case 96: {
              addNormalizedCategoryTokensIds(input.readInt32());
              break;
            }
            case 98: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addNormalizedCategoryTokensIds(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      }
      
      
      // required int32 numberOfTitles = 1;
      public boolean hasNumberOfTitles() {
        return result.hasNumberOfTitles();
      }
      public int getNumberOfTitles() {
        return result.getNumberOfTitles();
      }
      public Builder setNumberOfTitles(int value) {
        result.hasNumberOfTitles = true;
        result.numberOfTitles_ = value;
        return this;
      }
      public Builder clearNumberOfTitles() {
        result.hasNumberOfTitles = false;
        result.numberOfTitles_ = 0;
        return this;
      }
      
      // repeated string tokens = 2;
      public java.util.List<java.lang.String> getTokensList() {
        return java.util.Collections.unmodifiableList(result.tokens_);
      }
      public int getTokensCount() {
        return result.getTokensCount();
      }
      public java.lang.String getTokens(int index) {
        return result.getTokens(index);
      }
      public Builder setTokens(int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.tokens_.set(index, value);
        return this;
      }
      public Builder addTokens(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  if (result.tokens_.isEmpty()) {
          result.tokens_ = new java.util.ArrayList<java.lang.String>();
        }
        result.tokens_.add(value);
        return this;
      }
      public Builder addAllTokens(
          java.lang.Iterable<? extends java.lang.String> values) {
        if (result.tokens_.isEmpty()) {
          result.tokens_ = new java.util.ArrayList<java.lang.String>();
        }
        super.addAll(values, result.tokens_);
        return this;
      }
      public Builder clearTokens() {
        result.tokens_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated int32 tokenFids = 3;
      public java.util.List<java.lang.Integer> getTokenFidsList() {
        return java.util.Collections.unmodifiableList(result.tokenFids_);
      }
      public int getTokenFidsCount() {
        return result.getTokenFidsCount();
      }
      public int getTokenFids(int index) {
        return result.getTokenFids(index);
      }
      public Builder setTokenFids(int index, int value) {
        result.tokenFids_.set(index, value);
        return this;
      }
      public Builder addTokenFids(int value) {
        if (result.tokenFids_.isEmpty()) {
          result.tokenFids_ = new java.util.ArrayList<java.lang.Integer>();
        }
        result.tokenFids_.add(value);
        return this;
      }
      public Builder addAllTokenFids(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        if (result.tokenFids_.isEmpty()) {
          result.tokenFids_ = new java.util.ArrayList<java.lang.Integer>();
        }
        super.addAll(values, result.tokenFids_);
        return this;
      }
      public Builder clearTokenFids() {
        result.tokenFids_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated int32 tokensIdfCounts = 4;
      public java.util.List<java.lang.Integer> getTokensIdfCountsList() {
        return java.util.Collections.unmodifiableList(result.tokensIdfCounts_);
      }
      public int getTokensIdfCountsCount() {
        return result.getTokensIdfCountsCount();
      }
      public int getTokensIdfCounts(int index) {
        return result.getTokensIdfCounts(index);
      }
      public Builder setTokensIdfCounts(int index, int value) {
        result.tokensIdfCounts_.set(index, value);
        return this;
      }
      public Builder addTokensIdfCounts(int value) {
        if (result.tokensIdfCounts_.isEmpty()) {
          result.tokensIdfCounts_ = new java.util.ArrayList<java.lang.Integer>();
        }
        result.tokensIdfCounts_.add(value);
        return this;
      }
      public Builder addAllTokensIdfCounts(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        if (result.tokensIdfCounts_.isEmpty()) {
          result.tokensIdfCounts_ = new java.util.ArrayList<java.lang.Integer>();
        }
        super.addAll(values, result.tokensIdfCounts_);
        return this;
      }
      public Builder clearTokensIdfCounts() {
        result.tokensIdfCounts_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated string possibleCoarseNerTypes = 5;
      public java.util.List<java.lang.String> getPossibleCoarseNerTypesList() {
        return java.util.Collections.unmodifiableList(result.possibleCoarseNerTypes_);
      }
      public int getPossibleCoarseNerTypesCount() {
        return result.getPossibleCoarseNerTypesCount();
      }
      public java.lang.String getPossibleCoarseNerTypes(int index) {
        return result.getPossibleCoarseNerTypes(index);
      }
      public Builder setPossibleCoarseNerTypes(int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.possibleCoarseNerTypes_.set(index, value);
        return this;
      }
      public Builder addPossibleCoarseNerTypes(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  if (result.possibleCoarseNerTypes_.isEmpty()) {
          result.possibleCoarseNerTypes_ = new java.util.ArrayList<java.lang.String>();
        }
        result.possibleCoarseNerTypes_.add(value);
        return this;
      }
      public Builder addAllPossibleCoarseNerTypes(
          java.lang.Iterable<? extends java.lang.String> values) {
        if (result.possibleCoarseNerTypes_.isEmpty()) {
          result.possibleCoarseNerTypes_ = new java.util.ArrayList<java.lang.String>();
        }
        super.addAll(values, result.possibleCoarseNerTypes_);
        return this;
      }
      public Builder clearPossibleCoarseNerTypes() {
        result.possibleCoarseNerTypes_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated int32 possibleCoarseNerTypesIds = 6;
      public java.util.List<java.lang.Integer> getPossibleCoarseNerTypesIdsList() {
        return java.util.Collections.unmodifiableList(result.possibleCoarseNerTypesIds_);
      }
      public int getPossibleCoarseNerTypesIdsCount() {
        return result.getPossibleCoarseNerTypesIdsCount();
      }
      public int getPossibleCoarseNerTypesIds(int index) {
        return result.getPossibleCoarseNerTypesIds(index);
      }
      public Builder setPossibleCoarseNerTypesIds(int index, int value) {
        result.possibleCoarseNerTypesIds_.set(index, value);
        return this;
      }
      public Builder addPossibleCoarseNerTypesIds(int value) {
        if (result.possibleCoarseNerTypesIds_.isEmpty()) {
          result.possibleCoarseNerTypesIds_ = new java.util.ArrayList<java.lang.Integer>();
        }
        result.possibleCoarseNerTypesIds_.add(value);
        return this;
      }
      public Builder addAllPossibleCoarseNerTypesIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        if (result.possibleCoarseNerTypesIds_.isEmpty()) {
          result.possibleCoarseNerTypesIds_ = new java.util.ArrayList<java.lang.Integer>();
        }
        super.addAll(values, result.possibleCoarseNerTypesIds_);
        return this;
      }
      public Builder clearPossibleCoarseNerTypesIds() {
        result.possibleCoarseNerTypesIds_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated string possibleTopics = 7;
      public java.util.List<java.lang.String> getPossibleTopicsList() {
        return java.util.Collections.unmodifiableList(result.possibleTopics_);
      }
      public int getPossibleTopicsCount() {
        return result.getPossibleTopicsCount();
      }
      public java.lang.String getPossibleTopics(int index) {
        return result.getPossibleTopics(index);
      }
      public Builder setPossibleTopics(int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.possibleTopics_.set(index, value);
        return this;
      }
      public Builder addPossibleTopics(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  if (result.possibleTopics_.isEmpty()) {
          result.possibleTopics_ = new java.util.ArrayList<java.lang.String>();
        }
        result.possibleTopics_.add(value);
        return this;
      }
      public Builder addAllPossibleTopics(
          java.lang.Iterable<? extends java.lang.String> values) {
        if (result.possibleTopics_.isEmpty()) {
          result.possibleTopics_ = new java.util.ArrayList<java.lang.String>();
        }
        super.addAll(values, result.possibleTopics_);
        return this;
      }
      public Builder clearPossibleTopics() {
        result.possibleTopics_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated int32 possibleTopicsIds = 8;
      public java.util.List<java.lang.Integer> getPossibleTopicsIdsList() {
        return java.util.Collections.unmodifiableList(result.possibleTopicsIds_);
      }
      public int getPossibleTopicsIdsCount() {
        return result.getPossibleTopicsIdsCount();
      }
      public int getPossibleTopicsIds(int index) {
        return result.getPossibleTopicsIds(index);
      }
      public Builder setPossibleTopicsIds(int index, int value) {
        result.possibleTopicsIds_.set(index, value);
        return this;
      }
      public Builder addPossibleTopicsIds(int value) {
        if (result.possibleTopicsIds_.isEmpty()) {
          result.possibleTopicsIds_ = new java.util.ArrayList<java.lang.Integer>();
        }
        result.possibleTopicsIds_.add(value);
        return this;
      }
      public Builder addAllPossibleTopicsIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        if (result.possibleTopicsIds_.isEmpty()) {
          result.possibleTopicsIds_ = new java.util.ArrayList<java.lang.Integer>();
        }
        super.addAll(values, result.possibleTopicsIds_);
        return this;
      }
      public Builder clearPossibleTopicsIds() {
        result.possibleTopicsIds_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated string unnormalizedCategoryTokens = 9;
      public java.util.List<java.lang.String> getUnnormalizedCategoryTokensList() {
        return java.util.Collections.unmodifiableList(result.unnormalizedCategoryTokens_);
      }
      public int getUnnormalizedCategoryTokensCount() {
        return result.getUnnormalizedCategoryTokensCount();
      }
      public java.lang.String getUnnormalizedCategoryTokens(int index) {
        return result.getUnnormalizedCategoryTokens(index);
      }
      public Builder setUnnormalizedCategoryTokens(int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.unnormalizedCategoryTokens_.set(index, value);
        return this;
      }
      public Builder addUnnormalizedCategoryTokens(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  if (result.unnormalizedCategoryTokens_.isEmpty()) {
          result.unnormalizedCategoryTokens_ = new java.util.ArrayList<java.lang.String>();
        }
        result.unnormalizedCategoryTokens_.add(value);
        return this;
      }
      public Builder addAllUnnormalizedCategoryTokens(
          java.lang.Iterable<? extends java.lang.String> values) {
        if (result.unnormalizedCategoryTokens_.isEmpty()) {
          result.unnormalizedCategoryTokens_ = new java.util.ArrayList<java.lang.String>();
        }
        super.addAll(values, result.unnormalizedCategoryTokens_);
        return this;
      }
      public Builder clearUnnormalizedCategoryTokens() {
        result.unnormalizedCategoryTokens_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated string mappingToNormalizedCategoryTokenVersion = 10;
      public java.util.List<java.lang.String> getMappingToNormalizedCategoryTokenVersionList() {
        return java.util.Collections.unmodifiableList(result.mappingToNormalizedCategoryTokenVersion_);
      }
      public int getMappingToNormalizedCategoryTokenVersionCount() {
        return result.getMappingToNormalizedCategoryTokenVersionCount();
      }
      public java.lang.String getMappingToNormalizedCategoryTokenVersion(int index) {
        return result.getMappingToNormalizedCategoryTokenVersion(index);
      }
      public Builder setMappingToNormalizedCategoryTokenVersion(int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.mappingToNormalizedCategoryTokenVersion_.set(index, value);
        return this;
      }
      public Builder addMappingToNormalizedCategoryTokenVersion(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  if (result.mappingToNormalizedCategoryTokenVersion_.isEmpty()) {
          result.mappingToNormalizedCategoryTokenVersion_ = new java.util.ArrayList<java.lang.String>();
        }
        result.mappingToNormalizedCategoryTokenVersion_.add(value);
        return this;
      }
      public Builder addAllMappingToNormalizedCategoryTokenVersion(
          java.lang.Iterable<? extends java.lang.String> values) {
        if (result.mappingToNormalizedCategoryTokenVersion_.isEmpty()) {
          result.mappingToNormalizedCategoryTokenVersion_ = new java.util.ArrayList<java.lang.String>();
        }
        super.addAll(values, result.mappingToNormalizedCategoryTokenVersion_);
        return this;
      }
      public Builder clearMappingToNormalizedCategoryTokenVersion() {
        result.mappingToNormalizedCategoryTokenVersion_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated string normalizedCategoryTokens = 11;
      public java.util.List<java.lang.String> getNormalizedCategoryTokensList() {
        return java.util.Collections.unmodifiableList(result.normalizedCategoryTokens_);
      }
      public int getNormalizedCategoryTokensCount() {
        return result.getNormalizedCategoryTokensCount();
      }
      public java.lang.String getNormalizedCategoryTokens(int index) {
        return result.getNormalizedCategoryTokens(index);
      }
      public Builder setNormalizedCategoryTokens(int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.normalizedCategoryTokens_.set(index, value);
        return this;
      }
      public Builder addNormalizedCategoryTokens(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  if (result.normalizedCategoryTokens_.isEmpty()) {
          result.normalizedCategoryTokens_ = new java.util.ArrayList<java.lang.String>();
        }
        result.normalizedCategoryTokens_.add(value);
        return this;
      }
      public Builder addAllNormalizedCategoryTokens(
          java.lang.Iterable<? extends java.lang.String> values) {
        if (result.normalizedCategoryTokens_.isEmpty()) {
          result.normalizedCategoryTokens_ = new java.util.ArrayList<java.lang.String>();
        }
        super.addAll(values, result.normalizedCategoryTokens_);
        return this;
      }
      public Builder clearNormalizedCategoryTokens() {
        result.normalizedCategoryTokens_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated int32 normalizedCategoryTokensIds = 12;
      public java.util.List<java.lang.Integer> getNormalizedCategoryTokensIdsList() {
        return java.util.Collections.unmodifiableList(result.normalizedCategoryTokensIds_);
      }
      public int getNormalizedCategoryTokensIdsCount() {
        return result.getNormalizedCategoryTokensIdsCount();
      }
      public int getNormalizedCategoryTokensIds(int index) {
        return result.getNormalizedCategoryTokensIds(index);
      }
      public Builder setNormalizedCategoryTokensIds(int index, int value) {
        result.normalizedCategoryTokensIds_.set(index, value);
        return this;
      }
      public Builder addNormalizedCategoryTokensIds(int value) {
        if (result.normalizedCategoryTokensIds_.isEmpty()) {
          result.normalizedCategoryTokensIds_ = new java.util.ArrayList<java.lang.Integer>();
        }
        result.normalizedCategoryTokensIds_.add(value);
        return this;
      }
      public Builder addAllNormalizedCategoryTokensIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        if (result.normalizedCategoryTokensIds_.isEmpty()) {
          result.normalizedCategoryTokensIds_ = new java.util.ArrayList<java.lang.Integer>();
        }
        super.addAll(values, result.normalizedCategoryTokensIds_);
        return this;
      }
      public Builder clearNormalizedCategoryTokensIds() {
        result.normalizedCategoryTokensIds_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:WikiDataSummaryProto)
    }
    
    static {
      defaultInstance = new WikiDataSummaryProto(true);
      edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:WikiDataSummaryProto)
  }
  
  public static final class ExtendedWikipediaData extends
      com.google.protobuf.GeneratedMessage {
    // Use ExtendedWikipediaData.newBuilder() to construct.
    private ExtendedWikipediaData() {
      initFields();
    }
    private ExtendedWikipediaData(boolean noInit) {}
    
    private static final ExtendedWikipediaData defaultInstance;
    public static ExtendedWikipediaData getDefaultInstance() {
      return defaultInstance;
    }
    
    public ExtendedWikipediaData getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.internal_static_ExtendedWikipediaData_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.internal_static_ExtendedWikipediaData_fieldAccessorTable;
    }
    
    // required int32 titleId = 1;
    public static final int TITLEID_FIELD_NUMBER = 1;
    private boolean hasTitleId;
    private int titleId_ = 0;
    public boolean hasTitleId() { return hasTitleId; }
    public int getTitleId() { return titleId_; }
    
    // required string originalTextWithHyperlinks = 2;
    public static final int ORIGINALTEXTWITHHYPERLINKS_FIELD_NUMBER = 2;
    private boolean hasOriginalTextWithHyperlinks;
    private java.lang.String originalTextWithHyperlinks_ = "";
    public boolean hasOriginalTextWithHyperlinks() { return hasOriginalTextWithHyperlinks; }
    public java.lang.String getOriginalTextWithHyperlinks() { return originalTextWithHyperlinks_; }
    
    // required string textNoHyperlinks = 3;
    public static final int TEXTNOHYPERLINKS_FIELD_NUMBER = 3;
    private boolean hasTextNoHyperlinks;
    private java.lang.String textNoHyperlinks_ = "";
    public boolean hasTextNoHyperlinks() { return hasTextNoHyperlinks; }
    public java.lang.String getTextNoHyperlinks() { return textNoHyperlinks_; }
    
    // repeated string outgoingLinksSurfaceForms = 4;
    public static final int OUTGOINGLINKSSURFACEFORMS_FIELD_NUMBER = 4;
    private java.util.List<java.lang.String> outgoingLinksSurfaceForms_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.String> getOutgoingLinksSurfaceFormsList() {
      return outgoingLinksSurfaceForms_;
    }
    public int getOutgoingLinksSurfaceFormsCount() { return outgoingLinksSurfaceForms_.size(); }
    public java.lang.String getOutgoingLinksSurfaceForms(int index) {
      return outgoingLinksSurfaceForms_.get(index);
    }
    
    // repeated string outgoingLinksTitles = 5;
    public static final int OUTGOINGLINKSTITLES_FIELD_NUMBER = 5;
    private java.util.List<java.lang.String> outgoingLinksTitles_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.String> getOutgoingLinksTitlesList() {
      return outgoingLinksTitles_;
    }
    public int getOutgoingLinksTitlesCount() { return outgoingLinksTitles_.size(); }
    public java.lang.String getOutgoingLinksTitles(int index) {
      return outgoingLinksTitles_.get(index);
    }
    
    // repeated string categoriesOriginal = 6;
    public static final int CATEGORIESORIGINAL_FIELD_NUMBER = 6;
    private java.util.List<java.lang.String> categoriesOriginal_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.String> getCategoriesOriginalList() {
      return categoriesOriginal_;
    }
    public int getCategoriesOriginalCount() { return categoriesOriginal_.size(); }
    public java.lang.String getCategoriesOriginal(int index) {
      return categoriesOriginal_.get(index);
    }
    
    // repeated string categoriesTokenizedNormalized = 7;
    public static final int CATEGORIESTOKENIZEDNORMALIZED_FIELD_NUMBER = 7;
    private java.util.List<java.lang.String> categoriesTokenizedNormalized_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.String> getCategoriesTokenizedNormalizedList() {
      return categoriesTokenizedNormalized_;
    }
    public int getCategoriesTokenizedNormalizedCount() { return categoriesTokenizedNormalized_.size(); }
    public java.lang.String getCategoriesTokenizedNormalized(int index) {
      return categoriesTokenizedNormalized_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasTitleId) return false;
      if (!hasOriginalTextWithHyperlinks) return false;
      if (!hasTextNoHyperlinks) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasTitleId()) {
        output.writeInt32(1, getTitleId());
      }
      if (hasOriginalTextWithHyperlinks()) {
        output.writeString(2, getOriginalTextWithHyperlinks());
      }
      if (hasTextNoHyperlinks()) {
        output.writeString(3, getTextNoHyperlinks());
      }
      for (java.lang.String element : getOutgoingLinksSurfaceFormsList()) {
        output.writeString(4, element);
      }
      for (java.lang.String element : getOutgoingLinksTitlesList()) {
        output.writeString(5, element);
      }
      for (java.lang.String element : getCategoriesOriginalList()) {
        output.writeString(6, element);
      }
      for (java.lang.String element : getCategoriesTokenizedNormalizedList()) {
        output.writeString(7, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasTitleId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getTitleId());
      }
      if (hasOriginalTextWithHyperlinks()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getOriginalTextWithHyperlinks());
      }
      if (hasTextNoHyperlinks()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getTextNoHyperlinks());
      }
      {
        int dataSize = 0;
        for (java.lang.String element : getOutgoingLinksSurfaceFormsList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getOutgoingLinksSurfaceFormsList().size();
      }
      {
        int dataSize = 0;
        for (java.lang.String element : getOutgoingLinksTitlesList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getOutgoingLinksTitlesList().size();
      }
      {
        int dataSize = 0;
        for (java.lang.String element : getCategoriesOriginalList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getCategoriesOriginalList().size();
      }
      {
        int dataSize = 0;
        for (java.lang.String element : getCategoriesTokenizedNormalizedList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getCategoriesTokenizedNormalizedList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.ExtendedWikipediaData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.ExtendedWikipediaData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.ExtendedWikipediaData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.ExtendedWikipediaData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.ExtendedWikipediaData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.ExtendedWikipediaData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.ExtendedWikipediaData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.ExtendedWikipediaData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.ExtendedWikipediaData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.ExtendedWikipediaData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.ExtendedWikipediaData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.ExtendedWikipediaData result;
      
      // Construct using GeneratedProtobufferCode.WikipediaProtobuffers.ExtendedWikipediaData.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.ExtendedWikipediaData();
        return builder;
      }
      
      protected edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.ExtendedWikipediaData internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.ExtendedWikipediaData();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.ExtendedWikipediaData.getDescriptor();
      }
      
      public edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.ExtendedWikipediaData getDefaultInstanceForType() {
        return edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.ExtendedWikipediaData.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.ExtendedWikipediaData build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.ExtendedWikipediaData buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.ExtendedWikipediaData buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.outgoingLinksSurfaceForms_ != java.util.Collections.EMPTY_LIST) {
          result.outgoingLinksSurfaceForms_ =
            java.util.Collections.unmodifiableList(result.outgoingLinksSurfaceForms_);
        }
        if (result.outgoingLinksTitles_ != java.util.Collections.EMPTY_LIST) {
          result.outgoingLinksTitles_ =
            java.util.Collections.unmodifiableList(result.outgoingLinksTitles_);
        }
        if (result.categoriesOriginal_ != java.util.Collections.EMPTY_LIST) {
          result.categoriesOriginal_ =
            java.util.Collections.unmodifiableList(result.categoriesOriginal_);
        }
        if (result.categoriesTokenizedNormalized_ != java.util.Collections.EMPTY_LIST) {
          result.categoriesTokenizedNormalized_ =
            java.util.Collections.unmodifiableList(result.categoriesTokenizedNormalized_);
        }
        edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.ExtendedWikipediaData returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.ExtendedWikipediaData) {
          return mergeFrom((edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.ExtendedWikipediaData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.ExtendedWikipediaData other) {
        if (other == edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.ExtendedWikipediaData.getDefaultInstance()) return this;
        if (other.hasTitleId()) {
          setTitleId(other.getTitleId());
        }
        if (other.hasOriginalTextWithHyperlinks()) {
          setOriginalTextWithHyperlinks(other.getOriginalTextWithHyperlinks());
        }
        if (other.hasTextNoHyperlinks()) {
          setTextNoHyperlinks(other.getTextNoHyperlinks());
        }
        if (!other.outgoingLinksSurfaceForms_.isEmpty()) {
          if (result.outgoingLinksSurfaceForms_.isEmpty()) {
            result.outgoingLinksSurfaceForms_ = new java.util.ArrayList<java.lang.String>();
          }
          result.outgoingLinksSurfaceForms_.addAll(other.outgoingLinksSurfaceForms_);
        }
        if (!other.outgoingLinksTitles_.isEmpty()) {
          if (result.outgoingLinksTitles_.isEmpty()) {
            result.outgoingLinksTitles_ = new java.util.ArrayList<java.lang.String>();
          }
          result.outgoingLinksTitles_.addAll(other.outgoingLinksTitles_);
        }
        if (!other.categoriesOriginal_.isEmpty()) {
          if (result.categoriesOriginal_.isEmpty()) {
            result.categoriesOriginal_ = new java.util.ArrayList<java.lang.String>();
          }
          result.categoriesOriginal_.addAll(other.categoriesOriginal_);
        }
        if (!other.categoriesTokenizedNormalized_.isEmpty()) {
          if (result.categoriesTokenizedNormalized_.isEmpty()) {
            result.categoriesTokenizedNormalized_ = new java.util.ArrayList<java.lang.String>();
          }
          result.categoriesTokenizedNormalized_.addAll(other.categoriesTokenizedNormalized_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setTitleId(input.readInt32());
              break;
            }
            case 18: {
              setOriginalTextWithHyperlinks(input.readString());
              break;
            }
            case 26: {
              setTextNoHyperlinks(input.readString());
              break;
            }
            case 34: {
              addOutgoingLinksSurfaceForms(input.readString());
              break;
            }
            case 42: {
              addOutgoingLinksTitles(input.readString());
              break;
            }
            case 50: {
              addCategoriesOriginal(input.readString());
              break;
            }
            case 58: {
              addCategoriesTokenizedNormalized(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required int32 titleId = 1;
      public boolean hasTitleId() {
        return result.hasTitleId();
      }
      public int getTitleId() {
        return result.getTitleId();
      }
      public Builder setTitleId(int value) {
        result.hasTitleId = true;
        result.titleId_ = value;
        return this;
      }
      public Builder clearTitleId() {
        result.hasTitleId = false;
        result.titleId_ = 0;
        return this;
      }
      
      // required string originalTextWithHyperlinks = 2;
      public boolean hasOriginalTextWithHyperlinks() {
        return result.hasOriginalTextWithHyperlinks();
      }
      public java.lang.String getOriginalTextWithHyperlinks() {
        return result.getOriginalTextWithHyperlinks();
      }
      public Builder setOriginalTextWithHyperlinks(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasOriginalTextWithHyperlinks = true;
        result.originalTextWithHyperlinks_ = value;
        return this;
      }
      public Builder clearOriginalTextWithHyperlinks() {
        result.hasOriginalTextWithHyperlinks = false;
        result.originalTextWithHyperlinks_ = getDefaultInstance().getOriginalTextWithHyperlinks();
        return this;
      }
      
      // required string textNoHyperlinks = 3;
      public boolean hasTextNoHyperlinks() {
        return result.hasTextNoHyperlinks();
      }
      public java.lang.String getTextNoHyperlinks() {
        return result.getTextNoHyperlinks();
      }
      public Builder setTextNoHyperlinks(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasTextNoHyperlinks = true;
        result.textNoHyperlinks_ = value;
        return this;
      }
      public Builder clearTextNoHyperlinks() {
        result.hasTextNoHyperlinks = false;
        result.textNoHyperlinks_ = getDefaultInstance().getTextNoHyperlinks();
        return this;
      }
      
      // repeated string outgoingLinksSurfaceForms = 4;
      public java.util.List<java.lang.String> getOutgoingLinksSurfaceFormsList() {
        return java.util.Collections.unmodifiableList(result.outgoingLinksSurfaceForms_);
      }
      public int getOutgoingLinksSurfaceFormsCount() {
        return result.getOutgoingLinksSurfaceFormsCount();
      }
      public java.lang.String getOutgoingLinksSurfaceForms(int index) {
        return result.getOutgoingLinksSurfaceForms(index);
      }
      public Builder setOutgoingLinksSurfaceForms(int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.outgoingLinksSurfaceForms_.set(index, value);
        return this;
      }
      public Builder addOutgoingLinksSurfaceForms(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  if (result.outgoingLinksSurfaceForms_.isEmpty()) {
          result.outgoingLinksSurfaceForms_ = new java.util.ArrayList<java.lang.String>();
        }
        result.outgoingLinksSurfaceForms_.add(value);
        return this;
      }
      public Builder addAllOutgoingLinksSurfaceForms(
          java.lang.Iterable<? extends java.lang.String> values) {
        if (result.outgoingLinksSurfaceForms_.isEmpty()) {
          result.outgoingLinksSurfaceForms_ = new java.util.ArrayList<java.lang.String>();
        }
        super.addAll(values, result.outgoingLinksSurfaceForms_);
        return this;
      }
      public Builder clearOutgoingLinksSurfaceForms() {
        result.outgoingLinksSurfaceForms_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated string outgoingLinksTitles = 5;
      public java.util.List<java.lang.String> getOutgoingLinksTitlesList() {
        return java.util.Collections.unmodifiableList(result.outgoingLinksTitles_);
      }
      public int getOutgoingLinksTitlesCount() {
        return result.getOutgoingLinksTitlesCount();
      }
      public java.lang.String getOutgoingLinksTitles(int index) {
        return result.getOutgoingLinksTitles(index);
      }
      public Builder setOutgoingLinksTitles(int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.outgoingLinksTitles_.set(index, value);
        return this;
      }
      public Builder addOutgoingLinksTitles(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  if (result.outgoingLinksTitles_.isEmpty()) {
          result.outgoingLinksTitles_ = new java.util.ArrayList<java.lang.String>();
        }
        result.outgoingLinksTitles_.add(value);
        return this;
      }
      public Builder addAllOutgoingLinksTitles(
          java.lang.Iterable<? extends java.lang.String> values) {
        if (result.outgoingLinksTitles_.isEmpty()) {
          result.outgoingLinksTitles_ = new java.util.ArrayList<java.lang.String>();
        }
        super.addAll(values, result.outgoingLinksTitles_);
        return this;
      }
      public Builder clearOutgoingLinksTitles() {
        result.outgoingLinksTitles_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated string categoriesOriginal = 6;
      public java.util.List<java.lang.String> getCategoriesOriginalList() {
        return java.util.Collections.unmodifiableList(result.categoriesOriginal_);
      }
      public int getCategoriesOriginalCount() {
        return result.getCategoriesOriginalCount();
      }
      public java.lang.String getCategoriesOriginal(int index) {
        return result.getCategoriesOriginal(index);
      }
      public Builder setCategoriesOriginal(int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.categoriesOriginal_.set(index, value);
        return this;
      }
      public Builder addCategoriesOriginal(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  if (result.categoriesOriginal_.isEmpty()) {
          result.categoriesOriginal_ = new java.util.ArrayList<java.lang.String>();
        }
        result.categoriesOriginal_.add(value);
        return this;
      }
      public Builder addAllCategoriesOriginal(
          java.lang.Iterable<? extends java.lang.String> values) {
        if (result.categoriesOriginal_.isEmpty()) {
          result.categoriesOriginal_ = new java.util.ArrayList<java.lang.String>();
        }
        super.addAll(values, result.categoriesOriginal_);
        return this;
      }
      public Builder clearCategoriesOriginal() {
        result.categoriesOriginal_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated string categoriesTokenizedNormalized = 7;
      public java.util.List<java.lang.String> getCategoriesTokenizedNormalizedList() {
        return java.util.Collections.unmodifiableList(result.categoriesTokenizedNormalized_);
      }
      public int getCategoriesTokenizedNormalizedCount() {
        return result.getCategoriesTokenizedNormalizedCount();
      }
      public java.lang.String getCategoriesTokenizedNormalized(int index) {
        return result.getCategoriesTokenizedNormalized(index);
      }
      public Builder setCategoriesTokenizedNormalized(int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.categoriesTokenizedNormalized_.set(index, value);
        return this;
      }
      public Builder addCategoriesTokenizedNormalized(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  if (result.categoriesTokenizedNormalized_.isEmpty()) {
          result.categoriesTokenizedNormalized_ = new java.util.ArrayList<java.lang.String>();
        }
        result.categoriesTokenizedNormalized_.add(value);
        return this;
      }
      public Builder addAllCategoriesTokenizedNormalized(
          java.lang.Iterable<? extends java.lang.String> values) {
        if (result.categoriesTokenizedNormalized_.isEmpty()) {
          result.categoriesTokenizedNormalized_ = new java.util.ArrayList<java.lang.String>();
        }
        super.addAll(values, result.categoriesTokenizedNormalized_);
        return this;
      }
      public Builder clearCategoriesTokenizedNormalized() {
        result.categoriesTokenizedNormalized_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:ExtendedWikipediaData)
    }
    
    static {
      defaultInstance = new ExtendedWikipediaData(true);
      edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:ExtendedWikipediaData)
  }
  
  public static final class KeywordsInTheFirstParagraphOfWikipediaArticleProto extends
      com.google.protobuf.GeneratedMessage {
    // Use KeywordsInTheFirstParagraphOfWikipediaArticleProto.newBuilder() to construct.
    private KeywordsInTheFirstParagraphOfWikipediaArticleProto() {
      initFields();
    }
    private KeywordsInTheFirstParagraphOfWikipediaArticleProto(boolean noInit) {}
    
    private static final KeywordsInTheFirstParagraphOfWikipediaArticleProto defaultInstance;
    public static KeywordsInTheFirstParagraphOfWikipediaArticleProto getDefaultInstance() {
      return defaultInstance;
    }
    
    public KeywordsInTheFirstParagraphOfWikipediaArticleProto getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.internal_static_KeywordsInTheFirstParagraphOfWikipediaArticleProto_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.internal_static_KeywordsInTheFirstParagraphOfWikipediaArticleProto_fieldAccessorTable;
    }
    
    // required int32 titleId = 1;
    public static final int TITLEID_FIELD_NUMBER = 1;
    private boolean hasTitleId;
    private int titleId_ = 0;
    public boolean hasTitleId() { return hasTitleId; }
    public int getTitleId() { return titleId_; }
    
    // repeated int32 keywordIds = 2;
    public static final int KEYWORDIDS_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> keywordIds_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Integer> getKeywordIdsList() {
      return keywordIds_;
    }
    public int getKeywordIdsCount() { return keywordIds_.size(); }
    public int getKeywordIds(int index) {
      return keywordIds_.get(index);
    }
    
    // repeated double keywordIdsWeights = 3;
    public static final int KEYWORDIDSWEIGHTS_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Double> keywordIdsWeights_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Double> getKeywordIdsWeightsList() {
      return keywordIdsWeights_;
    }
    public int getKeywordIdsWeightsCount() { return keywordIdsWeights_.size(); }
    public double getKeywordIdsWeights(int index) {
      return keywordIdsWeights_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasTitleId) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasTitleId()) {
        output.writeInt32(1, getTitleId());
      }
      for (int element : getKeywordIdsList()) {
        output.writeInt32(2, element);
      }
      for (double element : getKeywordIdsWeightsList()) {
        output.writeDouble(3, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasTitleId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getTitleId());
      }
      {
        int dataSize = 0;
        for (int element : getKeywordIdsList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getKeywordIdsList().size();
      }
      {
        int dataSize = 0;
        dataSize = 8 * getKeywordIdsWeightsList().size();
        size += dataSize;
        size += 1 * getKeywordIdsWeightsList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.KeywordsInTheFirstParagraphOfWikipediaArticleProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.KeywordsInTheFirstParagraphOfWikipediaArticleProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.KeywordsInTheFirstParagraphOfWikipediaArticleProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.KeywordsInTheFirstParagraphOfWikipediaArticleProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.KeywordsInTheFirstParagraphOfWikipediaArticleProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.KeywordsInTheFirstParagraphOfWikipediaArticleProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.KeywordsInTheFirstParagraphOfWikipediaArticleProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.KeywordsInTheFirstParagraphOfWikipediaArticleProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.KeywordsInTheFirstParagraphOfWikipediaArticleProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.KeywordsInTheFirstParagraphOfWikipediaArticleProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.KeywordsInTheFirstParagraphOfWikipediaArticleProto prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.KeywordsInTheFirstParagraphOfWikipediaArticleProto result;
      
      // Construct using GeneratedProtobufferCode.WikipediaProtobuffers.KeywordsInTheFirstParagraphOfWikipediaArticleProto.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.KeywordsInTheFirstParagraphOfWikipediaArticleProto();
        return builder;
      }
      
      protected edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.KeywordsInTheFirstParagraphOfWikipediaArticleProto internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.KeywordsInTheFirstParagraphOfWikipediaArticleProto();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.KeywordsInTheFirstParagraphOfWikipediaArticleProto.getDescriptor();
      }
      
      public edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.KeywordsInTheFirstParagraphOfWikipediaArticleProto getDefaultInstanceForType() {
        return edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.KeywordsInTheFirstParagraphOfWikipediaArticleProto.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.KeywordsInTheFirstParagraphOfWikipediaArticleProto build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.KeywordsInTheFirstParagraphOfWikipediaArticleProto buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.KeywordsInTheFirstParagraphOfWikipediaArticleProto buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.keywordIds_ != java.util.Collections.EMPTY_LIST) {
          result.keywordIds_ =
            java.util.Collections.unmodifiableList(result.keywordIds_);
        }
        if (result.keywordIdsWeights_ != java.util.Collections.EMPTY_LIST) {
          result.keywordIdsWeights_ =
            java.util.Collections.unmodifiableList(result.keywordIdsWeights_);
        }
        edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.KeywordsInTheFirstParagraphOfWikipediaArticleProto returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.KeywordsInTheFirstParagraphOfWikipediaArticleProto) {
          return mergeFrom((edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.KeywordsInTheFirstParagraphOfWikipediaArticleProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.KeywordsInTheFirstParagraphOfWikipediaArticleProto other) {
        if (other == edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.KeywordsInTheFirstParagraphOfWikipediaArticleProto.getDefaultInstance()) return this;
        if (other.hasTitleId()) {
          setTitleId(other.getTitleId());
        }
        if (!other.keywordIds_.isEmpty()) {
          if (result.keywordIds_.isEmpty()) {
            result.keywordIds_ = new java.util.ArrayList<java.lang.Integer>();
          }
          result.keywordIds_.addAll(other.keywordIds_);
        }
        if (!other.keywordIdsWeights_.isEmpty()) {
          if (result.keywordIdsWeights_.isEmpty()) {
            result.keywordIdsWeights_ = new java.util.ArrayList<java.lang.Double>();
          }
          result.keywordIdsWeights_.addAll(other.keywordIdsWeights_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setTitleId(input.readInt32());
              break;
            }
            case 16: {
              addKeywordIds(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addKeywordIds(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 25: {
              addKeywordIdsWeights(input.readDouble());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addKeywordIdsWeights(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      }
      
      
      // required int32 titleId = 1;
      public boolean hasTitleId() {
        return result.hasTitleId();
      }
      public int getTitleId() {
        return result.getTitleId();
      }
      public Builder setTitleId(int value) {
        result.hasTitleId = true;
        result.titleId_ = value;
        return this;
      }
      public Builder clearTitleId() {
        result.hasTitleId = false;
        result.titleId_ = 0;
        return this;
      }
      
      // repeated int32 keywordIds = 2;
      public java.util.List<java.lang.Integer> getKeywordIdsList() {
        return java.util.Collections.unmodifiableList(result.keywordIds_);
      }
      public int getKeywordIdsCount() {
        return result.getKeywordIdsCount();
      }
      public int getKeywordIds(int index) {
        return result.getKeywordIds(index);
      }
      public Builder setKeywordIds(int index, int value) {
        result.keywordIds_.set(index, value);
        return this;
      }
      public Builder addKeywordIds(int value) {
        if (result.keywordIds_.isEmpty()) {
          result.keywordIds_ = new java.util.ArrayList<java.lang.Integer>();
        }
        result.keywordIds_.add(value);
        return this;
      }
      public Builder addAllKeywordIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        if (result.keywordIds_.isEmpty()) {
          result.keywordIds_ = new java.util.ArrayList<java.lang.Integer>();
        }
        super.addAll(values, result.keywordIds_);
        return this;
      }
      public Builder clearKeywordIds() {
        result.keywordIds_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated double keywordIdsWeights = 3;
      public java.util.List<java.lang.Double> getKeywordIdsWeightsList() {
        return java.util.Collections.unmodifiableList(result.keywordIdsWeights_);
      }
      public int getKeywordIdsWeightsCount() {
        return result.getKeywordIdsWeightsCount();
      }
      public double getKeywordIdsWeights(int index) {
        return result.getKeywordIdsWeights(index);
      }
      public Builder setKeywordIdsWeights(int index, double value) {
        result.keywordIdsWeights_.set(index, value);
        return this;
      }
      public Builder addKeywordIdsWeights(double value) {
        if (result.keywordIdsWeights_.isEmpty()) {
          result.keywordIdsWeights_ = new java.util.ArrayList<java.lang.Double>();
        }
        result.keywordIdsWeights_.add(value);
        return this;
      }
      public Builder addAllKeywordIdsWeights(
          java.lang.Iterable<? extends java.lang.Double> values) {
        if (result.keywordIdsWeights_.isEmpty()) {
          result.keywordIdsWeights_ = new java.util.ArrayList<java.lang.Double>();
        }
        super.addAll(values, result.keywordIdsWeights_);
        return this;
      }
      public Builder clearKeywordIdsWeights() {
        result.keywordIdsWeights_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:KeywordsInTheFirstParagraphOfWikipediaArticleProto)
    }
    
    static {
      defaultInstance = new KeywordsInTheFirstParagraphOfWikipediaArticleProto(true);
      edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:KeywordsInTheFirstParagraphOfWikipediaArticleProto)
  }
  
  public static final class SurfaceFormSummaryProto extends
      com.google.protobuf.GeneratedMessage {
    // Use SurfaceFormSummaryProto.newBuilder() to construct.
    private SurfaceFormSummaryProto() {
      initFields();
    }
    private SurfaceFormSummaryProto(boolean noInit) {}
    
    private static final SurfaceFormSummaryProto defaultInstance;
    public static SurfaceFormSummaryProto getDefaultInstance() {
      return defaultInstance;
    }
    
    public SurfaceFormSummaryProto getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.internal_static_SurfaceFormSummaryProto_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.internal_static_SurfaceFormSummaryProto_fieldAccessorTable;
    }
    
    // required double ambiguity = 1;
    public static final int AMBIGUITY_FIELD_NUMBER = 1;
    private boolean hasAmbiguity;
    private double ambiguity_ = 0D;
    public boolean hasAmbiguity() { return hasAmbiguity; }
    public double getAmbiguity() { return ambiguity_; }
    
    // required int32 totalAppearanceCount = 2;
    public static final int TOTALAPPEARANCECOUNT_FIELD_NUMBER = 2;
    private boolean hasTotalAppearanceCount;
    private int totalAppearanceCount_ = 0;
    public boolean hasTotalAppearanceCount() { return hasTotalAppearanceCount; }
    public int getTotalAppearanceCount() { return totalAppearanceCount_; }
    
    // required int32 linkedAppearanceCount = 3;
    public static final int LINKEDAPPEARANCECOUNT_FIELD_NUMBER = 3;
    private boolean hasLinkedAppearanceCount;
    private int linkedAppearanceCount_ = 0;
    public boolean hasLinkedAppearanceCount() { return hasLinkedAppearanceCount; }
    public int getLinkedAppearanceCount() { return linkedAppearanceCount_; }
    
    // repeated int32 titleIds = 4;
    public static final int TITLEIDS_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Integer> titleIds_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Integer> getTitleIdsList() {
      return titleIds_;
    }
    public int getTitleIdsCount() { return titleIds_.size(); }
    public int getTitleIds(int index) {
      return titleIds_.get(index);
    }
    
    // repeated double conditionalTitleProb = 5;
    public static final int CONDITIONALTITLEPROB_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Double> conditionalTitleProb_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Double> getConditionalTitleProbList() {
      return conditionalTitleProb_;
    }
    public int getConditionalTitleProbCount() { return conditionalTitleProb_.size(); }
    public double getConditionalTitleProb(int index) {
      return conditionalTitleProb_.get(index);
    }
    
    // repeated double conditionalTitleAppearances = 6;
    public static final int CONDITIONALTITLEAPPEARANCES_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Double> conditionalTitleAppearances_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Double> getConditionalTitleAppearancesList() {
      return conditionalTitleAppearances_;
    }
    public int getConditionalTitleAppearancesCount() { return conditionalTitleAppearances_.size(); }
    public double getConditionalTitleAppearances(int index) {
      return conditionalTitleAppearances_.get(index);
    }
    
    // repeated double conditionalSurfaceFormProb = 7;
    public static final int CONDITIONALSURFACEFORMPROB_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Double> conditionalSurfaceFormProb_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Double> getConditionalSurfaceFormProbList() {
      return conditionalSurfaceFormProb_;
    }
    public int getConditionalSurfaceFormProbCount() { return conditionalSurfaceFormProb_.size(); }
    public double getConditionalSurfaceFormProb(int index) {
      return conditionalSurfaceFormProb_.get(index);
    }
    
    // required double logProbOnWebGoogle = 8;
    public static final int LOGPROBONWEBGOOGLE_FIELD_NUMBER = 8;
    private boolean hasLogProbOnWebGoogle;
    private double logProbOnWebGoogle_ = 0D;
    public boolean hasLogProbOnWebGoogle() { return hasLogProbOnWebGoogle; }
    public double getLogProbOnWebGoogle() { return logProbOnWebGoogle_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasAmbiguity) return false;
      if (!hasTotalAppearanceCount) return false;
      if (!hasLinkedAppearanceCount) return false;
      if (!hasLogProbOnWebGoogle) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasAmbiguity()) {
        output.writeDouble(1, getAmbiguity());
      }
      if (hasTotalAppearanceCount()) {
        output.writeInt32(2, getTotalAppearanceCount());
      }
      if (hasLinkedAppearanceCount()) {
        output.writeInt32(3, getLinkedAppearanceCount());
      }
      for (int element : getTitleIdsList()) {
        output.writeInt32(4, element);
      }
      for (double element : getConditionalTitleProbList()) {
        output.writeDouble(5, element);
      }
      for (double element : getConditionalTitleAppearancesList()) {
        output.writeDouble(6, element);
      }
      for (double element : getConditionalSurfaceFormProbList()) {
        output.writeDouble(7, element);
      }
      if (hasLogProbOnWebGoogle()) {
        output.writeDouble(8, getLogProbOnWebGoogle());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasAmbiguity()) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, getAmbiguity());
      }
      if (hasTotalAppearanceCount()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, getTotalAppearanceCount());
      }
      if (hasLinkedAppearanceCount()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, getLinkedAppearanceCount());
      }
      {
        int dataSize = 0;
        for (int element : getTitleIdsList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getTitleIdsList().size();
      }
      {
        int dataSize = 0;
        dataSize = 8 * getConditionalTitleProbList().size();
        size += dataSize;
        size += 1 * getConditionalTitleProbList().size();
      }
      {
        int dataSize = 0;
        dataSize = 8 * getConditionalTitleAppearancesList().size();
        size += dataSize;
        size += 1 * getConditionalTitleAppearancesList().size();
      }
      {
        int dataSize = 0;
        dataSize = 8 * getConditionalSurfaceFormProbList().size();
        size += dataSize;
        size += 1 * getConditionalSurfaceFormProbList().size();
      }
      if (hasLogProbOnWebGoogle()) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(8, getLogProbOnWebGoogle());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.SurfaceFormSummaryProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.SurfaceFormSummaryProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.SurfaceFormSummaryProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.SurfaceFormSummaryProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.SurfaceFormSummaryProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.SurfaceFormSummaryProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.SurfaceFormSummaryProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.SurfaceFormSummaryProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.SurfaceFormSummaryProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.SurfaceFormSummaryProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.SurfaceFormSummaryProto prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.SurfaceFormSummaryProto result;
      
      // Construct using GeneratedProtobufferCode.WikipediaProtobuffers.SurfaceFormSummaryProto.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.SurfaceFormSummaryProto();
        return builder;
      }
      
      protected edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.SurfaceFormSummaryProto internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.SurfaceFormSummaryProto();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.SurfaceFormSummaryProto.getDescriptor();
      }
      
      public edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.SurfaceFormSummaryProto getDefaultInstanceForType() {
        return edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.SurfaceFormSummaryProto.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.SurfaceFormSummaryProto build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.SurfaceFormSummaryProto buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.SurfaceFormSummaryProto buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.titleIds_ != java.util.Collections.EMPTY_LIST) {
          result.titleIds_ =
            java.util.Collections.unmodifiableList(result.titleIds_);
        }
        if (result.conditionalTitleProb_ != java.util.Collections.EMPTY_LIST) {
          result.conditionalTitleProb_ =
            java.util.Collections.unmodifiableList(result.conditionalTitleProb_);
        }
        if (result.conditionalTitleAppearances_ != java.util.Collections.EMPTY_LIST) {
          result.conditionalTitleAppearances_ =
            java.util.Collections.unmodifiableList(result.conditionalTitleAppearances_);
        }
        if (result.conditionalSurfaceFormProb_ != java.util.Collections.EMPTY_LIST) {
          result.conditionalSurfaceFormProb_ =
            java.util.Collections.unmodifiableList(result.conditionalSurfaceFormProb_);
        }
        edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.SurfaceFormSummaryProto returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.SurfaceFormSummaryProto) {
          return mergeFrom((edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.SurfaceFormSummaryProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.SurfaceFormSummaryProto other) {
        if (other == edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.SurfaceFormSummaryProto.getDefaultInstance()) return this;
        if (other.hasAmbiguity()) {
          setAmbiguity(other.getAmbiguity());
        }
        if (other.hasTotalAppearanceCount()) {
          setTotalAppearanceCount(other.getTotalAppearanceCount());
        }
        if (other.hasLinkedAppearanceCount()) {
          setLinkedAppearanceCount(other.getLinkedAppearanceCount());
        }
        if (!other.titleIds_.isEmpty()) {
          if (result.titleIds_.isEmpty()) {
            result.titleIds_ = new java.util.ArrayList<java.lang.Integer>();
          }
          result.titleIds_.addAll(other.titleIds_);
        }
        if (!other.conditionalTitleProb_.isEmpty()) {
          if (result.conditionalTitleProb_.isEmpty()) {
            result.conditionalTitleProb_ = new java.util.ArrayList<java.lang.Double>();
          }
          result.conditionalTitleProb_.addAll(other.conditionalTitleProb_);
        }
        if (!other.conditionalTitleAppearances_.isEmpty()) {
          if (result.conditionalTitleAppearances_.isEmpty()) {
            result.conditionalTitleAppearances_ = new java.util.ArrayList<java.lang.Double>();
          }
          result.conditionalTitleAppearances_.addAll(other.conditionalTitleAppearances_);
        }
        if (!other.conditionalSurfaceFormProb_.isEmpty()) {
          if (result.conditionalSurfaceFormProb_.isEmpty()) {
            result.conditionalSurfaceFormProb_ = new java.util.ArrayList<java.lang.Double>();
          }
          result.conditionalSurfaceFormProb_.addAll(other.conditionalSurfaceFormProb_);
        }
        if (other.hasLogProbOnWebGoogle()) {
          setLogProbOnWebGoogle(other.getLogProbOnWebGoogle());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 9: {
              setAmbiguity(input.readDouble());
              break;
            }
            case 16: {
              setTotalAppearanceCount(input.readInt32());
              break;
            }
            case 24: {
              setLinkedAppearanceCount(input.readInt32());
              break;
            }
            case 32: {
              addTitleIds(input.readInt32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addTitleIds(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 41: {
              addConditionalTitleProb(input.readDouble());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addConditionalTitleProb(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 49: {
              addConditionalTitleAppearances(input.readDouble());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addConditionalTitleAppearances(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 57: {
              addConditionalSurfaceFormProb(input.readDouble());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addConditionalSurfaceFormProb(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 65: {
              setLogProbOnWebGoogle(input.readDouble());
              break;
            }
          }
        }
      }
      
      
      // required double ambiguity = 1;
      public boolean hasAmbiguity() {
        return result.hasAmbiguity();
      }
      public double getAmbiguity() {
        return result.getAmbiguity();
      }
      public Builder setAmbiguity(double value) {
        result.hasAmbiguity = true;
        result.ambiguity_ = value;
        return this;
      }
      public Builder clearAmbiguity() {
        result.hasAmbiguity = false;
        result.ambiguity_ = 0D;
        return this;
      }
      
      // required int32 totalAppearanceCount = 2;
      public boolean hasTotalAppearanceCount() {
        return result.hasTotalAppearanceCount();
      }
      public int getTotalAppearanceCount() {
        return result.getTotalAppearanceCount();
      }
      public Builder setTotalAppearanceCount(int value) {
        result.hasTotalAppearanceCount = true;
        result.totalAppearanceCount_ = value;
        return this;
      }
      public Builder clearTotalAppearanceCount() {
        result.hasTotalAppearanceCount = false;
        result.totalAppearanceCount_ = 0;
        return this;
      }
      
      // required int32 linkedAppearanceCount = 3;
      public boolean hasLinkedAppearanceCount() {
        return result.hasLinkedAppearanceCount();
      }
      public int getLinkedAppearanceCount() {
        return result.getLinkedAppearanceCount();
      }
      public Builder setLinkedAppearanceCount(int value) {
        result.hasLinkedAppearanceCount = true;
        result.linkedAppearanceCount_ = value;
        return this;
      }
      public Builder clearLinkedAppearanceCount() {
        result.hasLinkedAppearanceCount = false;
        result.linkedAppearanceCount_ = 0;
        return this;
      }
      
      // repeated int32 titleIds = 4;
      public java.util.List<java.lang.Integer> getTitleIdsList() {
        return java.util.Collections.unmodifiableList(result.titleIds_);
      }
      public int getTitleIdsCount() {
        return result.getTitleIdsCount();
      }
      public int getTitleIds(int index) {
        return result.getTitleIds(index);
      }
      public Builder setTitleIds(int index, int value) {
        result.titleIds_.set(index, value);
        return this;
      }
      public Builder addTitleIds(int value) {
        if (result.titleIds_.isEmpty()) {
          result.titleIds_ = new java.util.ArrayList<java.lang.Integer>();
        }
        result.titleIds_.add(value);
        return this;
      }
      public Builder addAllTitleIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        if (result.titleIds_.isEmpty()) {
          result.titleIds_ = new java.util.ArrayList<java.lang.Integer>();
        }
        super.addAll(values, result.titleIds_);
        return this;
      }
      public Builder clearTitleIds() {
        result.titleIds_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated double conditionalTitleProb = 5;
      public java.util.List<java.lang.Double> getConditionalTitleProbList() {
        return java.util.Collections.unmodifiableList(result.conditionalTitleProb_);
      }
      public int getConditionalTitleProbCount() {
        return result.getConditionalTitleProbCount();
      }
      public double getConditionalTitleProb(int index) {
        return result.getConditionalTitleProb(index);
      }
      public Builder setConditionalTitleProb(int index, double value) {
        result.conditionalTitleProb_.set(index, value);
        return this;
      }
      public Builder addConditionalTitleProb(double value) {
        if (result.conditionalTitleProb_.isEmpty()) {
          result.conditionalTitleProb_ = new java.util.ArrayList<java.lang.Double>();
        }
        result.conditionalTitleProb_.add(value);
        return this;
      }
      public Builder addAllConditionalTitleProb(
          java.lang.Iterable<? extends java.lang.Double> values) {
        if (result.conditionalTitleProb_.isEmpty()) {
          result.conditionalTitleProb_ = new java.util.ArrayList<java.lang.Double>();
        }
        super.addAll(values, result.conditionalTitleProb_);
        return this;
      }
      public Builder clearConditionalTitleProb() {
        result.conditionalTitleProb_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated double conditionalTitleAppearances = 6;
      public java.util.List<java.lang.Double> getConditionalTitleAppearancesList() {
        return java.util.Collections.unmodifiableList(result.conditionalTitleAppearances_);
      }
      public int getConditionalTitleAppearancesCount() {
        return result.getConditionalTitleAppearancesCount();
      }
      public double getConditionalTitleAppearances(int index) {
        return result.getConditionalTitleAppearances(index);
      }
      public Builder setConditionalTitleAppearances(int index, double value) {
        result.conditionalTitleAppearances_.set(index, value);
        return this;
      }
      public Builder addConditionalTitleAppearances(double value) {
        if (result.conditionalTitleAppearances_.isEmpty()) {
          result.conditionalTitleAppearances_ = new java.util.ArrayList<java.lang.Double>();
        }
        result.conditionalTitleAppearances_.add(value);
        return this;
      }
      public Builder addAllConditionalTitleAppearances(
          java.lang.Iterable<? extends java.lang.Double> values) {
        if (result.conditionalTitleAppearances_.isEmpty()) {
          result.conditionalTitleAppearances_ = new java.util.ArrayList<java.lang.Double>();
        }
        super.addAll(values, result.conditionalTitleAppearances_);
        return this;
      }
      public Builder clearConditionalTitleAppearances() {
        result.conditionalTitleAppearances_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated double conditionalSurfaceFormProb = 7;
      public java.util.List<java.lang.Double> getConditionalSurfaceFormProbList() {
        return java.util.Collections.unmodifiableList(result.conditionalSurfaceFormProb_);
      }
      public int getConditionalSurfaceFormProbCount() {
        return result.getConditionalSurfaceFormProbCount();
      }
      public double getConditionalSurfaceFormProb(int index) {
        return result.getConditionalSurfaceFormProb(index);
      }
      public Builder setConditionalSurfaceFormProb(int index, double value) {
        result.conditionalSurfaceFormProb_.set(index, value);
        return this;
      }
      public Builder addConditionalSurfaceFormProb(double value) {
        if (result.conditionalSurfaceFormProb_.isEmpty()) {
          result.conditionalSurfaceFormProb_ = new java.util.ArrayList<java.lang.Double>();
        }
        result.conditionalSurfaceFormProb_.add(value);
        return this;
      }
      public Builder addAllConditionalSurfaceFormProb(
          java.lang.Iterable<? extends java.lang.Double> values) {
        if (result.conditionalSurfaceFormProb_.isEmpty()) {
          result.conditionalSurfaceFormProb_ = new java.util.ArrayList<java.lang.Double>();
        }
        super.addAll(values, result.conditionalSurfaceFormProb_);
        return this;
      }
      public Builder clearConditionalSurfaceFormProb() {
        result.conditionalSurfaceFormProb_ = java.util.Collections.emptyList();
        return this;
      }
      
      // required double logProbOnWebGoogle = 8;
      public boolean hasLogProbOnWebGoogle() {
        return result.hasLogProbOnWebGoogle();
      }
      public double getLogProbOnWebGoogle() {
        return result.getLogProbOnWebGoogle();
      }
      public Builder setLogProbOnWebGoogle(double value) {
        result.hasLogProbOnWebGoogle = true;
        result.logProbOnWebGoogle_ = value;
        return this;
      }
      public Builder clearLogProbOnWebGoogle() {
        result.hasLogProbOnWebGoogle = false;
        result.logProbOnWebGoogle_ = 0D;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:SurfaceFormSummaryProto)
    }
    
    static {
      defaultInstance = new SurfaceFormSummaryProto(true);
      edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:SurfaceFormSummaryProto)
  }
  
  public static final class BasicTitleDataInfoProto extends
      com.google.protobuf.GeneratedMessage {
    // Use BasicTitleDataInfoProto.newBuilder() to construct.
    private BasicTitleDataInfoProto() {
      initFields();
    }
    private BasicTitleDataInfoProto(boolean noInit) {}
    
    private static final BasicTitleDataInfoProto defaultInstance;
    public static BasicTitleDataInfoProto getDefaultInstance() {
      return defaultInstance;
    }
    
    public BasicTitleDataInfoProto getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.internal_static_BasicTitleDataInfoProto_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.internal_static_BasicTitleDataInfoProto_fieldAccessorTable;
    }
    
    // required int32 titleId = 1;
    public static final int TITLEID_FIELD_NUMBER = 1;
    private boolean hasTitleId;
    private int titleId_ = 0;
    public boolean hasTitleId() { return hasTitleId; }
    public int getTitleId() { return titleId_; }
    
    // required string titleSurfaceForm = 2;
    public static final int TITLESURFACEFORM_FIELD_NUMBER = 2;
    private boolean hasTitleSurfaceForm;
    private java.lang.String titleSurfaceForm_ = "";
    public boolean hasTitleSurfaceForm() { return hasTitleSurfaceForm; }
    public java.lang.String getTitleSurfaceForm() { return titleSurfaceForm_; }
    
    // required int32 titleAppearanceCount = 3;
    public static final int TITLEAPPEARANCECOUNT_FIELD_NUMBER = 3;
    private boolean hasTitleAppearanceCount;
    private int titleAppearanceCount_ = 0;
    public boolean hasTitleAppearanceCount() { return hasTitleAppearanceCount; }
    public int getTitleAppearanceCount() { return titleAppearanceCount_; }
    
    // required int32 numberOfOugoingLinks = 4;
    public static final int NUMBEROFOUGOINGLINKS_FIELD_NUMBER = 4;
    private boolean hasNumberOfOugoingLinks;
    private int numberOfOugoingLinks_ = 0;
    public boolean hasNumberOfOugoingLinks() { return hasNumberOfOugoingLinks; }
    public int getNumberOfOugoingLinks() { return numberOfOugoingLinks_; }
    
    // required int32 numberOfIngoingLinks = 5;
    public static final int NUMBEROFINGOINGLINKS_FIELD_NUMBER = 5;
    private boolean hasNumberOfIngoingLinks;
    private int numberOfIngoingLinks_ = 0;
    public boolean hasNumberOfIngoingLinks() { return hasNumberOfIngoingLinks; }
    public int getNumberOfIngoingLinks() { return numberOfIngoingLinks_; }
    
    // repeated int32 coarseNerTypesIds = 6;
    public static final int COARSENERTYPESIDS_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Integer> coarseNerTypesIds_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Integer> getCoarseNerTypesIdsList() {
      return coarseNerTypesIds_;
    }
    public int getCoarseNerTypesIdsCount() { return coarseNerTypesIds_.size(); }
    public int getCoarseNerTypesIds(int index) {
      return coarseNerTypesIds_.get(index);
    }
    
    // repeated int32 topicsIds = 7;
    public static final int TOPICSIDS_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Integer> topicsIds_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Integer> getTopicsIdsList() {
      return topicsIds_;
    }
    public int getTopicsIdsCount() { return topicsIds_.size(); }
    public int getTopicsIds(int index) {
      return topicsIds_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasTitleId) return false;
      if (!hasTitleSurfaceForm) return false;
      if (!hasTitleAppearanceCount) return false;
      if (!hasNumberOfOugoingLinks) return false;
      if (!hasNumberOfIngoingLinks) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasTitleId()) {
        output.writeInt32(1, getTitleId());
      }
      if (hasTitleSurfaceForm()) {
        output.writeString(2, getTitleSurfaceForm());
      }
      if (hasTitleAppearanceCount()) {
        output.writeInt32(3, getTitleAppearanceCount());
      }
      if (hasNumberOfOugoingLinks()) {
        output.writeInt32(4, getNumberOfOugoingLinks());
      }
      if (hasNumberOfIngoingLinks()) {
        output.writeInt32(5, getNumberOfIngoingLinks());
      }
      for (int element : getCoarseNerTypesIdsList()) {
        output.writeInt32(6, element);
      }
      for (int element : getTopicsIdsList()) {
        output.writeInt32(7, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasTitleId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getTitleId());
      }
      if (hasTitleSurfaceForm()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getTitleSurfaceForm());
      }
      if (hasTitleAppearanceCount()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, getTitleAppearanceCount());
      }
      if (hasNumberOfOugoingLinks()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, getNumberOfOugoingLinks());
      }
      if (hasNumberOfIngoingLinks()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, getNumberOfIngoingLinks());
      }
      {
        int dataSize = 0;
        for (int element : getCoarseNerTypesIdsList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getCoarseNerTypesIdsList().size();
      }
      {
        int dataSize = 0;
        for (int element : getTopicsIdsList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getTopicsIdsList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.BasicTitleDataInfoProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.BasicTitleDataInfoProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.BasicTitleDataInfoProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.BasicTitleDataInfoProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.BasicTitleDataInfoProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.BasicTitleDataInfoProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.BasicTitleDataInfoProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.BasicTitleDataInfoProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.BasicTitleDataInfoProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.BasicTitleDataInfoProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.BasicTitleDataInfoProto prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.BasicTitleDataInfoProto result;
      
      // Construct using GeneratedProtobufferCode.WikipediaProtobuffers.BasicTitleDataInfoProto.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.BasicTitleDataInfoProto();
        return builder;
      }
      
      protected edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.BasicTitleDataInfoProto internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.BasicTitleDataInfoProto();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.BasicTitleDataInfoProto.getDescriptor();
      }
      
      public edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.BasicTitleDataInfoProto getDefaultInstanceForType() {
        return edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.BasicTitleDataInfoProto.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.BasicTitleDataInfoProto build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.BasicTitleDataInfoProto buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.BasicTitleDataInfoProto buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.coarseNerTypesIds_ != java.util.Collections.EMPTY_LIST) {
          result.coarseNerTypesIds_ =
            java.util.Collections.unmodifiableList(result.coarseNerTypesIds_);
        }
        if (result.topicsIds_ != java.util.Collections.EMPTY_LIST) {
          result.topicsIds_ =
            java.util.Collections.unmodifiableList(result.topicsIds_);
        }
        edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.BasicTitleDataInfoProto returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.BasicTitleDataInfoProto) {
          return mergeFrom((edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.BasicTitleDataInfoProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.BasicTitleDataInfoProto other) {
        if (other == edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.BasicTitleDataInfoProto.getDefaultInstance()) return this;
        if (other.hasTitleId()) {
          setTitleId(other.getTitleId());
        }
        if (other.hasTitleSurfaceForm()) {
          setTitleSurfaceForm(other.getTitleSurfaceForm());
        }
        if (other.hasTitleAppearanceCount()) {
          setTitleAppearanceCount(other.getTitleAppearanceCount());
        }
        if (other.hasNumberOfOugoingLinks()) {
          setNumberOfOugoingLinks(other.getNumberOfOugoingLinks());
        }
        if (other.hasNumberOfIngoingLinks()) {
          setNumberOfIngoingLinks(other.getNumberOfIngoingLinks());
        }
        if (!other.coarseNerTypesIds_.isEmpty()) {
          if (result.coarseNerTypesIds_.isEmpty()) {
            result.coarseNerTypesIds_ = new java.util.ArrayList<java.lang.Integer>();
          }
          result.coarseNerTypesIds_.addAll(other.coarseNerTypesIds_);
        }
        if (!other.topicsIds_.isEmpty()) {
          if (result.topicsIds_.isEmpty()) {
            result.topicsIds_ = new java.util.ArrayList<java.lang.Integer>();
          }
          result.topicsIds_.addAll(other.topicsIds_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setTitleId(input.readInt32());
              break;
            }
            case 18: {
              setTitleSurfaceForm(input.readString());
              break;
            }
            case 24: {
              setTitleAppearanceCount(input.readInt32());
              break;
            }
            case 32: {
              setNumberOfOugoingLinks(input.readInt32());
              break;
            }
            case 40: {
              setNumberOfIngoingLinks(input.readInt32());
              break;
            }
            case 48: {
              addCoarseNerTypesIds(input.readInt32());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addCoarseNerTypesIds(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 56: {
              addTopicsIds(input.readInt32());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addTopicsIds(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      }
      
      
      // required int32 titleId = 1;
      public boolean hasTitleId() {
        return result.hasTitleId();
      }
      public int getTitleId() {
        return result.getTitleId();
      }
      public Builder setTitleId(int value) {
        result.hasTitleId = true;
        result.titleId_ = value;
        return this;
      }
      public Builder clearTitleId() {
        result.hasTitleId = false;
        result.titleId_ = 0;
        return this;
      }
      
      // required string titleSurfaceForm = 2;
      public boolean hasTitleSurfaceForm() {
        return result.hasTitleSurfaceForm();
      }
      public java.lang.String getTitleSurfaceForm() {
        return result.getTitleSurfaceForm();
      }
      public Builder setTitleSurfaceForm(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasTitleSurfaceForm = true;
        result.titleSurfaceForm_ = value;
        return this;
      }
      public Builder clearTitleSurfaceForm() {
        result.hasTitleSurfaceForm = false;
        result.titleSurfaceForm_ = getDefaultInstance().getTitleSurfaceForm();
        return this;
      }
      
      // required int32 titleAppearanceCount = 3;
      public boolean hasTitleAppearanceCount() {
        return result.hasTitleAppearanceCount();
      }
      public int getTitleAppearanceCount() {
        return result.getTitleAppearanceCount();
      }
      public Builder setTitleAppearanceCount(int value) {
        result.hasTitleAppearanceCount = true;
        result.titleAppearanceCount_ = value;
        return this;
      }
      public Builder clearTitleAppearanceCount() {
        result.hasTitleAppearanceCount = false;
        result.titleAppearanceCount_ = 0;
        return this;
      }
      
      // required int32 numberOfOugoingLinks = 4;
      public boolean hasNumberOfOugoingLinks() {
        return result.hasNumberOfOugoingLinks();
      }
      public int getNumberOfOugoingLinks() {
        return result.getNumberOfOugoingLinks();
      }
      public Builder setNumberOfOugoingLinks(int value) {
        result.hasNumberOfOugoingLinks = true;
        result.numberOfOugoingLinks_ = value;
        return this;
      }
      public Builder clearNumberOfOugoingLinks() {
        result.hasNumberOfOugoingLinks = false;
        result.numberOfOugoingLinks_ = 0;
        return this;
      }
      
      // required int32 numberOfIngoingLinks = 5;
      public boolean hasNumberOfIngoingLinks() {
        return result.hasNumberOfIngoingLinks();
      }
      public int getNumberOfIngoingLinks() {
        return result.getNumberOfIngoingLinks();
      }
      public Builder setNumberOfIngoingLinks(int value) {
        result.hasNumberOfIngoingLinks = true;
        result.numberOfIngoingLinks_ = value;
        return this;
      }
      public Builder clearNumberOfIngoingLinks() {
        result.hasNumberOfIngoingLinks = false;
        result.numberOfIngoingLinks_ = 0;
        return this;
      }
      
      // repeated int32 coarseNerTypesIds = 6;
      public java.util.List<java.lang.Integer> getCoarseNerTypesIdsList() {
        return java.util.Collections.unmodifiableList(result.coarseNerTypesIds_);
      }
      public int getCoarseNerTypesIdsCount() {
        return result.getCoarseNerTypesIdsCount();
      }
      public int getCoarseNerTypesIds(int index) {
        return result.getCoarseNerTypesIds(index);
      }
      public Builder setCoarseNerTypesIds(int index, int value) {
        result.coarseNerTypesIds_.set(index, value);
        return this;
      }
      public Builder addCoarseNerTypesIds(int value) {
        if (result.coarseNerTypesIds_.isEmpty()) {
          result.coarseNerTypesIds_ = new java.util.ArrayList<java.lang.Integer>();
        }
        result.coarseNerTypesIds_.add(value);
        return this;
      }
      public Builder addAllCoarseNerTypesIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        if (result.coarseNerTypesIds_.isEmpty()) {
          result.coarseNerTypesIds_ = new java.util.ArrayList<java.lang.Integer>();
        }
        super.addAll(values, result.coarseNerTypesIds_);
        return this;
      }
      public Builder clearCoarseNerTypesIds() {
        result.coarseNerTypesIds_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated int32 topicsIds = 7;
      public java.util.List<java.lang.Integer> getTopicsIdsList() {
        return java.util.Collections.unmodifiableList(result.topicsIds_);
      }
      public int getTopicsIdsCount() {
        return result.getTopicsIdsCount();
      }
      public int getTopicsIds(int index) {
        return result.getTopicsIds(index);
      }
      public Builder setTopicsIds(int index, int value) {
        result.topicsIds_.set(index, value);
        return this;
      }
      public Builder addTopicsIds(int value) {
        if (result.topicsIds_.isEmpty()) {
          result.topicsIds_ = new java.util.ArrayList<java.lang.Integer>();
        }
        result.topicsIds_.add(value);
        return this;
      }
      public Builder addAllTopicsIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        if (result.topicsIds_.isEmpty()) {
          result.topicsIds_ = new java.util.ArrayList<java.lang.Integer>();
        }
        super.addAll(values, result.topicsIds_);
        return this;
      }
      public Builder clearTopicsIds() {
        result.topicsIds_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:BasicTitleDataInfoProto)
    }
    
    static {
      defaultInstance = new BasicTitleDataInfoProto(true);
      edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:BasicTitleDataInfoProto)
  }
  
  public static final class LexicalTitleDataInfoProto extends
      com.google.protobuf.GeneratedMessage {
    // Use LexicalTitleDataInfoProto.newBuilder() to construct.
    private LexicalTitleDataInfoProto() {
      initFields();
    }
    private LexicalTitleDataInfoProto(boolean noInit) {}
    
    private static final LexicalTitleDataInfoProto defaultInstance;
    public static LexicalTitleDataInfoProto getDefaultInstance() {
      return defaultInstance;
    }
    
    public LexicalTitleDataInfoProto getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.internal_static_LexicalTitleDataInfoProto_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.internal_static_LexicalTitleDataInfoProto_fieldAccessorTable;
    }
    
    // repeated int32 textTokensFids = 1;
    public static final int TEXTTOKENSFIDS_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> textTokensFids_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Integer> getTextTokensFidsList() {
      return textTokensFids_;
    }
    public int getTextTokensFidsCount() { return textTokensFids_.size(); }
    public int getTextTokensFids(int index) {
      return textTokensFids_.get(index);
    }
    
    // repeated double textTokensFidsWeights = 2;
    public static final int TEXTTOKENSFIDSWEIGHTS_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Double> textTokensFidsWeights_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Double> getTextTokensFidsWeightsList() {
      return textTokensFidsWeights_;
    }
    public int getTextTokensFidsWeightsCount() { return textTokensFidsWeights_.size(); }
    public double getTextTokensFidsWeights(int index) {
      return textTokensFidsWeights_.get(index);
    }
    
    // repeated int32 contextTokensFids = 3;
    public static final int CONTEXTTOKENSFIDS_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> contextTokensFids_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Integer> getContextTokensFidsList() {
      return contextTokensFids_;
    }
    public int getContextTokensFidsCount() { return contextTokensFids_.size(); }
    public int getContextTokensFids(int index) {
      return contextTokensFids_.get(index);
    }
    
    // repeated double contextTokensFidsWeights = 4;
    public static final int CONTEXTTOKENSFIDSWEIGHTS_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Double> contextTokensFidsWeights_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Double> getContextTokensFidsWeightsList() {
      return contextTokensFidsWeights_;
    }
    public int getContextTokensFidsWeightsCount() { return contextTokensFidsWeights_.size(); }
    public double getContextTokensFidsWeights(int index) {
      return contextTokensFidsWeights_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int element : getTextTokensFidsList()) {
        output.writeInt32(1, element);
      }
      for (double element : getTextTokensFidsWeightsList()) {
        output.writeDouble(2, element);
      }
      for (int element : getContextTokensFidsList()) {
        output.writeInt32(3, element);
      }
      for (double element : getContextTokensFidsWeightsList()) {
        output.writeDouble(4, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      {
        int dataSize = 0;
        for (int element : getTextTokensFidsList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getTextTokensFidsList().size();
      }
      {
        int dataSize = 0;
        dataSize = 8 * getTextTokensFidsWeightsList().size();
        size += dataSize;
        size += 1 * getTextTokensFidsWeightsList().size();
      }
      {
        int dataSize = 0;
        for (int element : getContextTokensFidsList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getContextTokensFidsList().size();
      }
      {
        int dataSize = 0;
        dataSize = 8 * getContextTokensFidsWeightsList().size();
        size += dataSize;
        size += 1 * getContextTokensFidsWeightsList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.LexicalTitleDataInfoProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.LexicalTitleDataInfoProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.LexicalTitleDataInfoProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.LexicalTitleDataInfoProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.LexicalTitleDataInfoProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.LexicalTitleDataInfoProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.LexicalTitleDataInfoProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.LexicalTitleDataInfoProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.LexicalTitleDataInfoProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.LexicalTitleDataInfoProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.LexicalTitleDataInfoProto prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.LexicalTitleDataInfoProto result;
      
      // Construct using GeneratedProtobufferCode.WikipediaProtobuffers.LexicalTitleDataInfoProto.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.LexicalTitleDataInfoProto();
        return builder;
      }
      
      protected edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.LexicalTitleDataInfoProto internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.LexicalTitleDataInfoProto();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.LexicalTitleDataInfoProto.getDescriptor();
      }
      
      public edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.LexicalTitleDataInfoProto getDefaultInstanceForType() {
        return edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.LexicalTitleDataInfoProto.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.LexicalTitleDataInfoProto build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.LexicalTitleDataInfoProto buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.LexicalTitleDataInfoProto buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.textTokensFids_ != java.util.Collections.EMPTY_LIST) {
          result.textTokensFids_ =
            java.util.Collections.unmodifiableList(result.textTokensFids_);
        }
        if (result.textTokensFidsWeights_ != java.util.Collections.EMPTY_LIST) {
          result.textTokensFidsWeights_ =
            java.util.Collections.unmodifiableList(result.textTokensFidsWeights_);
        }
        if (result.contextTokensFids_ != java.util.Collections.EMPTY_LIST) {
          result.contextTokensFids_ =
            java.util.Collections.unmodifiableList(result.contextTokensFids_);
        }
        if (result.contextTokensFidsWeights_ != java.util.Collections.EMPTY_LIST) {
          result.contextTokensFidsWeights_ =
            java.util.Collections.unmodifiableList(result.contextTokensFidsWeights_);
        }
        edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.LexicalTitleDataInfoProto returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.LexicalTitleDataInfoProto) {
          return mergeFrom((edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.LexicalTitleDataInfoProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.LexicalTitleDataInfoProto other) {
        if (other == edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.LexicalTitleDataInfoProto.getDefaultInstance()) return this;
        if (!other.textTokensFids_.isEmpty()) {
          if (result.textTokensFids_.isEmpty()) {
            result.textTokensFids_ = new java.util.ArrayList<java.lang.Integer>();
          }
          result.textTokensFids_.addAll(other.textTokensFids_);
        }
        if (!other.textTokensFidsWeights_.isEmpty()) {
          if (result.textTokensFidsWeights_.isEmpty()) {
            result.textTokensFidsWeights_ = new java.util.ArrayList<java.lang.Double>();
          }
          result.textTokensFidsWeights_.addAll(other.textTokensFidsWeights_);
        }
        if (!other.contextTokensFids_.isEmpty()) {
          if (result.contextTokensFids_.isEmpty()) {
            result.contextTokensFids_ = new java.util.ArrayList<java.lang.Integer>();
          }
          result.contextTokensFids_.addAll(other.contextTokensFids_);
        }
        if (!other.contextTokensFidsWeights_.isEmpty()) {
          if (result.contextTokensFidsWeights_.isEmpty()) {
            result.contextTokensFidsWeights_ = new java.util.ArrayList<java.lang.Double>();
          }
          result.contextTokensFidsWeights_.addAll(other.contextTokensFidsWeights_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              addTextTokensFids(input.readInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addTextTokensFids(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 17: {
              addTextTokensFidsWeights(input.readDouble());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addTextTokensFidsWeights(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              addContextTokensFids(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addContextTokensFids(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 33: {
              addContextTokensFidsWeights(input.readDouble());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addContextTokensFidsWeights(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      }
      
      
      // repeated int32 textTokensFids = 1;
      public java.util.List<java.lang.Integer> getTextTokensFidsList() {
        return java.util.Collections.unmodifiableList(result.textTokensFids_);
      }
      public int getTextTokensFidsCount() {
        return result.getTextTokensFidsCount();
      }
      public int getTextTokensFids(int index) {
        return result.getTextTokensFids(index);
      }
      public Builder setTextTokensFids(int index, int value) {
        result.textTokensFids_.set(index, value);
        return this;
      }
      public Builder addTextTokensFids(int value) {
        if (result.textTokensFids_.isEmpty()) {
          result.textTokensFids_ = new java.util.ArrayList<java.lang.Integer>();
        }
        result.textTokensFids_.add(value);
        return this;
      }
      public Builder addAllTextTokensFids(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        if (result.textTokensFids_.isEmpty()) {
          result.textTokensFids_ = new java.util.ArrayList<java.lang.Integer>();
        }
        super.addAll(values, result.textTokensFids_);
        return this;
      }
      public Builder clearTextTokensFids() {
        result.textTokensFids_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated double textTokensFidsWeights = 2;
      public java.util.List<java.lang.Double> getTextTokensFidsWeightsList() {
        return java.util.Collections.unmodifiableList(result.textTokensFidsWeights_);
      }
      public int getTextTokensFidsWeightsCount() {
        return result.getTextTokensFidsWeightsCount();
      }
      public double getTextTokensFidsWeights(int index) {
        return result.getTextTokensFidsWeights(index);
      }
      public Builder setTextTokensFidsWeights(int index, double value) {
        result.textTokensFidsWeights_.set(index, value);
        return this;
      }
      public Builder addTextTokensFidsWeights(double value) {
        if (result.textTokensFidsWeights_.isEmpty()) {
          result.textTokensFidsWeights_ = new java.util.ArrayList<java.lang.Double>();
        }
        result.textTokensFidsWeights_.add(value);
        return this;
      }
      public Builder addAllTextTokensFidsWeights(
          java.lang.Iterable<? extends java.lang.Double> values) {
        if (result.textTokensFidsWeights_.isEmpty()) {
          result.textTokensFidsWeights_ = new java.util.ArrayList<java.lang.Double>();
        }
        super.addAll(values, result.textTokensFidsWeights_);
        return this;
      }
      public Builder clearTextTokensFidsWeights() {
        result.textTokensFidsWeights_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated int32 contextTokensFids = 3;
      public java.util.List<java.lang.Integer> getContextTokensFidsList() {
        return java.util.Collections.unmodifiableList(result.contextTokensFids_);
      }
      public int getContextTokensFidsCount() {
        return result.getContextTokensFidsCount();
      }
      public int getContextTokensFids(int index) {
        return result.getContextTokensFids(index);
      }
      public Builder setContextTokensFids(int index, int value) {
        result.contextTokensFids_.set(index, value);
        return this;
      }
      public Builder addContextTokensFids(int value) {
        if (result.contextTokensFids_.isEmpty()) {
          result.contextTokensFids_ = new java.util.ArrayList<java.lang.Integer>();
        }
        result.contextTokensFids_.add(value);
        return this;
      }
      public Builder addAllContextTokensFids(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        if (result.contextTokensFids_.isEmpty()) {
          result.contextTokensFids_ = new java.util.ArrayList<java.lang.Integer>();
        }
        super.addAll(values, result.contextTokensFids_);
        return this;
      }
      public Builder clearContextTokensFids() {
        result.contextTokensFids_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated double contextTokensFidsWeights = 4;
      public java.util.List<java.lang.Double> getContextTokensFidsWeightsList() {
        return java.util.Collections.unmodifiableList(result.contextTokensFidsWeights_);
      }
      public int getContextTokensFidsWeightsCount() {
        return result.getContextTokensFidsWeightsCount();
      }
      public double getContextTokensFidsWeights(int index) {
        return result.getContextTokensFidsWeights(index);
      }
      public Builder setContextTokensFidsWeights(int index, double value) {
        result.contextTokensFidsWeights_.set(index, value);
        return this;
      }
      public Builder addContextTokensFidsWeights(double value) {
        if (result.contextTokensFidsWeights_.isEmpty()) {
          result.contextTokensFidsWeights_ = new java.util.ArrayList<java.lang.Double>();
        }
        result.contextTokensFidsWeights_.add(value);
        return this;
      }
      public Builder addAllContextTokensFidsWeights(
          java.lang.Iterable<? extends java.lang.Double> values) {
        if (result.contextTokensFidsWeights_.isEmpty()) {
          result.contextTokensFidsWeights_ = new java.util.ArrayList<java.lang.Double>();
        }
        super.addAll(values, result.contextTokensFidsWeights_);
        return this;
      }
      public Builder clearContextTokensFidsWeights() {
        result.contextTokensFidsWeights_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:LexicalTitleDataInfoProto)
    }
    
    static {
      defaultInstance = new LexicalTitleDataInfoProto(true);
      edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:LexicalTitleDataInfoProto)
  }
  
  public static final class SemanticTitleDataInfoProto extends
      com.google.protobuf.GeneratedMessage {
    // Use SemanticTitleDataInfoProto.newBuilder() to construct.
    private SemanticTitleDataInfoProto() {
      initFields();
    }
    private SemanticTitleDataInfoProto(boolean noInit) {}
    
    private static final SemanticTitleDataInfoProto defaultInstance;
    public static SemanticTitleDataInfoProto getDefaultInstance() {
      return defaultInstance;
    }
    
    public SemanticTitleDataInfoProto getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.internal_static_SemanticTitleDataInfoProto_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.internal_static_SemanticTitleDataInfoProto_fieldAccessorTable;
    }
    
    // repeated int32 normalizedCategoryTokensIds = 1;
    public static final int NORMALIZEDCATEGORYTOKENSIDS_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> normalizedCategoryTokensIds_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Integer> getNormalizedCategoryTokensIdsList() {
      return normalizedCategoryTokensIds_;
    }
    public int getNormalizedCategoryTokensIdsCount() { return normalizedCategoryTokensIds_.size(); }
    public int getNormalizedCategoryTokensIds(int index) {
      return normalizedCategoryTokensIds_.get(index);
    }
    
    // repeated int32 categoryIds = 2;
    public static final int CATEGORYIDS_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> categoryIds_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Integer> getCategoryIdsList() {
      return categoryIds_;
    }
    public int getCategoryIdsCount() { return categoryIds_.size(); }
    public int getCategoryIds(int index) {
      return categoryIds_.get(index);
    }
    
    // repeated int32 incomingLinksIds = 3;
    public static final int INCOMINGLINKSIDS_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> incomingLinksIds_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Integer> getIncomingLinksIdsList() {
      return incomingLinksIds_;
    }
    public int getIncomingLinksIdsCount() { return incomingLinksIds_.size(); }
    public int getIncomingLinksIds(int index) {
      return incomingLinksIds_.get(index);
    }
    
    // repeated int32 outgoingLinksIds = 4;
    public static final int OUTGOINGLINKSIDS_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Integer> outgoingLinksIds_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Integer> getOutgoingLinksIdsList() {
      return outgoingLinksIds_;
    }
    public int getOutgoingLinksIdsCount() { return outgoingLinksIds_.size(); }
    public int getOutgoingLinksIds(int index) {
      return outgoingLinksIds_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int element : getNormalizedCategoryTokensIdsList()) {
        output.writeInt32(1, element);
      }
      for (int element : getCategoryIdsList()) {
        output.writeInt32(2, element);
      }
      for (int element : getIncomingLinksIdsList()) {
        output.writeInt32(3, element);
      }
      for (int element : getOutgoingLinksIdsList()) {
        output.writeInt32(4, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      {
        int dataSize = 0;
        for (int element : getNormalizedCategoryTokensIdsList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getNormalizedCategoryTokensIdsList().size();
      }
      {
        int dataSize = 0;
        for (int element : getCategoryIdsList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getCategoryIdsList().size();
      }
      {
        int dataSize = 0;
        for (int element : getIncomingLinksIdsList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getIncomingLinksIdsList().size();
      }
      {
        int dataSize = 0;
        for (int element : getOutgoingLinksIdsList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getOutgoingLinksIdsList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.SemanticTitleDataInfoProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.SemanticTitleDataInfoProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.SemanticTitleDataInfoProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.SemanticTitleDataInfoProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.SemanticTitleDataInfoProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.SemanticTitleDataInfoProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.SemanticTitleDataInfoProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.SemanticTitleDataInfoProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.SemanticTitleDataInfoProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.SemanticTitleDataInfoProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.SemanticTitleDataInfoProto prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.SemanticTitleDataInfoProto result;
      
      // Construct using GeneratedProtobufferCode.WikipediaProtobuffers.SemanticTitleDataInfoProto.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.SemanticTitleDataInfoProto();
        return builder;
      }
      
      protected edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.SemanticTitleDataInfoProto internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.SemanticTitleDataInfoProto();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.SemanticTitleDataInfoProto.getDescriptor();
      }
      
      public edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.SemanticTitleDataInfoProto getDefaultInstanceForType() {
        return edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.SemanticTitleDataInfoProto.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.SemanticTitleDataInfoProto build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.SemanticTitleDataInfoProto buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.SemanticTitleDataInfoProto buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.normalizedCategoryTokensIds_ != java.util.Collections.EMPTY_LIST) {
          result.normalizedCategoryTokensIds_ =
            java.util.Collections.unmodifiableList(result.normalizedCategoryTokensIds_);
        }
        if (result.categoryIds_ != java.util.Collections.EMPTY_LIST) {
          result.categoryIds_ =
            java.util.Collections.unmodifiableList(result.categoryIds_);
        }
        if (result.incomingLinksIds_ != java.util.Collections.EMPTY_LIST) {
          result.incomingLinksIds_ =
            java.util.Collections.unmodifiableList(result.incomingLinksIds_);
        }
        if (result.outgoingLinksIds_ != java.util.Collections.EMPTY_LIST) {
          result.outgoingLinksIds_ =
            java.util.Collections.unmodifiableList(result.outgoingLinksIds_);
        }
        edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.SemanticTitleDataInfoProto returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.SemanticTitleDataInfoProto) {
          return mergeFrom((edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.SemanticTitleDataInfoProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.SemanticTitleDataInfoProto other) {
        if (other == edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.SemanticTitleDataInfoProto.getDefaultInstance()) return this;
        if (!other.normalizedCategoryTokensIds_.isEmpty()) {
          if (result.normalizedCategoryTokensIds_.isEmpty()) {
            result.normalizedCategoryTokensIds_ = new java.util.ArrayList<java.lang.Integer>();
          }
          result.normalizedCategoryTokensIds_.addAll(other.normalizedCategoryTokensIds_);
        }
        if (!other.categoryIds_.isEmpty()) {
          if (result.categoryIds_.isEmpty()) {
            result.categoryIds_ = new java.util.ArrayList<java.lang.Integer>();
          }
          result.categoryIds_.addAll(other.categoryIds_);
        }
        if (!other.incomingLinksIds_.isEmpty()) {
          if (result.incomingLinksIds_.isEmpty()) {
            result.incomingLinksIds_ = new java.util.ArrayList<java.lang.Integer>();
          }
          result.incomingLinksIds_.addAll(other.incomingLinksIds_);
        }
        if (!other.outgoingLinksIds_.isEmpty()) {
          if (result.outgoingLinksIds_.isEmpty()) {
            result.outgoingLinksIds_ = new java.util.ArrayList<java.lang.Integer>();
          }
          result.outgoingLinksIds_.addAll(other.outgoingLinksIds_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              addNormalizedCategoryTokensIds(input.readInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addNormalizedCategoryTokensIds(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 16: {
              addCategoryIds(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addCategoryIds(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              addIncomingLinksIds(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addIncomingLinksIds(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              addOutgoingLinksIds(input.readInt32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addOutgoingLinksIds(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      }
      
      
      // repeated int32 normalizedCategoryTokensIds = 1;
      public java.util.List<java.lang.Integer> getNormalizedCategoryTokensIdsList() {
        return java.util.Collections.unmodifiableList(result.normalizedCategoryTokensIds_);
      }
      public int getNormalizedCategoryTokensIdsCount() {
        return result.getNormalizedCategoryTokensIdsCount();
      }
      public int getNormalizedCategoryTokensIds(int index) {
        return result.getNormalizedCategoryTokensIds(index);
      }
      public Builder setNormalizedCategoryTokensIds(int index, int value) {
        result.normalizedCategoryTokensIds_.set(index, value);
        return this;
      }
      public Builder addNormalizedCategoryTokensIds(int value) {
        if (result.normalizedCategoryTokensIds_.isEmpty()) {
          result.normalizedCategoryTokensIds_ = new java.util.ArrayList<java.lang.Integer>();
        }
        result.normalizedCategoryTokensIds_.add(value);
        return this;
      }
      public Builder addAllNormalizedCategoryTokensIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        if (result.normalizedCategoryTokensIds_.isEmpty()) {
          result.normalizedCategoryTokensIds_ = new java.util.ArrayList<java.lang.Integer>();
        }
        super.addAll(values, result.normalizedCategoryTokensIds_);
        return this;
      }
      public Builder clearNormalizedCategoryTokensIds() {
        result.normalizedCategoryTokensIds_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated int32 categoryIds = 2;
      public java.util.List<java.lang.Integer> getCategoryIdsList() {
        return java.util.Collections.unmodifiableList(result.categoryIds_);
      }
      public int getCategoryIdsCount() {
        return result.getCategoryIdsCount();
      }
      public int getCategoryIds(int index) {
        return result.getCategoryIds(index);
      }
      public Builder setCategoryIds(int index, int value) {
        result.categoryIds_.set(index, value);
        return this;
      }
      public Builder addCategoryIds(int value) {
        if (result.categoryIds_.isEmpty()) {
          result.categoryIds_ = new java.util.ArrayList<java.lang.Integer>();
        }
        result.categoryIds_.add(value);
        return this;
      }
      public Builder addAllCategoryIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        if (result.categoryIds_.isEmpty()) {
          result.categoryIds_ = new java.util.ArrayList<java.lang.Integer>();
        }
        super.addAll(values, result.categoryIds_);
        return this;
      }
      public Builder clearCategoryIds() {
        result.categoryIds_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated int32 incomingLinksIds = 3;
      public java.util.List<java.lang.Integer> getIncomingLinksIdsList() {
        return java.util.Collections.unmodifiableList(result.incomingLinksIds_);
      }
      public int getIncomingLinksIdsCount() {
        return result.getIncomingLinksIdsCount();
      }
      public int getIncomingLinksIds(int index) {
        return result.getIncomingLinksIds(index);
      }
      public Builder setIncomingLinksIds(int index, int value) {
        result.incomingLinksIds_.set(index, value);
        return this;
      }
      public Builder addIncomingLinksIds(int value) {
        if (result.incomingLinksIds_.isEmpty()) {
          result.incomingLinksIds_ = new java.util.ArrayList<java.lang.Integer>();
        }
        result.incomingLinksIds_.add(value);
        return this;
      }
      public Builder addAllIncomingLinksIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        if (result.incomingLinksIds_.isEmpty()) {
          result.incomingLinksIds_ = new java.util.ArrayList<java.lang.Integer>();
        }
        super.addAll(values, result.incomingLinksIds_);
        return this;
      }
      public Builder clearIncomingLinksIds() {
        result.incomingLinksIds_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated int32 outgoingLinksIds = 4;
      public java.util.List<java.lang.Integer> getOutgoingLinksIdsList() {
        return java.util.Collections.unmodifiableList(result.outgoingLinksIds_);
      }
      public int getOutgoingLinksIdsCount() {
        return result.getOutgoingLinksIdsCount();
      }
      public int getOutgoingLinksIds(int index) {
        return result.getOutgoingLinksIds(index);
      }
      public Builder setOutgoingLinksIds(int index, int value) {
        result.outgoingLinksIds_.set(index, value);
        return this;
      }
      public Builder addOutgoingLinksIds(int value) {
        if (result.outgoingLinksIds_.isEmpty()) {
          result.outgoingLinksIds_ = new java.util.ArrayList<java.lang.Integer>();
        }
        result.outgoingLinksIds_.add(value);
        return this;
      }
      public Builder addAllOutgoingLinksIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        if (result.outgoingLinksIds_.isEmpty()) {
          result.outgoingLinksIds_ = new java.util.ArrayList<java.lang.Integer>();
        }
        super.addAll(values, result.outgoingLinksIds_);
        return this;
      }
      public Builder clearOutgoingLinksIds() {
        result.outgoingLinksIds_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:SemanticTitleDataInfoProto)
    }
    
    static {
      defaultInstance = new SemanticTitleDataInfoProto(true);
      edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:SemanticTitleDataInfoProto)
  }
  
  public static final class PairwiseSemanticSim extends
      com.google.protobuf.GeneratedMessage {
    // Use PairwiseSemanticSim.newBuilder() to construct.
    private PairwiseSemanticSim() {
      initFields();
    }
    private PairwiseSemanticSim(boolean noInit) {}
    
    private static final PairwiseSemanticSim defaultInstance;
    public static PairwiseSemanticSim getDefaultInstance() {
      return defaultInstance;
    }
    
    public PairwiseSemanticSim getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.internal_static_PairwiseSemanticSim_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.internal_static_PairwiseSemanticSim_fieldAccessorTable;
    }
    
    // required double incomingLinksPmi = 1;
    public static final int INCOMINGLINKSPMI_FIELD_NUMBER = 1;
    private boolean hasIncomingLinksPmi;
    private double incomingLinksPmi_ = 0D;
    public boolean hasIncomingLinksPmi() { return hasIncomingLinksPmi; }
    public double getIncomingLinksPmi() { return incomingLinksPmi_; }
    
    // required double incomingLinksNormalizedGoogleDistanceSim = 2;
    public static final int INCOMINGLINKSNORMALIZEDGOOGLEDISTANCESIM_FIELD_NUMBER = 2;
    private boolean hasIncomingLinksNormalizedGoogleDistanceSim;
    private double incomingLinksNormalizedGoogleDistanceSim_ = 0D;
    public boolean hasIncomingLinksNormalizedGoogleDistanceSim() { return hasIncomingLinksNormalizedGoogleDistanceSim; }
    public double getIncomingLinksNormalizedGoogleDistanceSim() { return incomingLinksNormalizedGoogleDistanceSim_; }
    
    // required double outgoingLinksPmi = 3;
    public static final int OUTGOINGLINKSPMI_FIELD_NUMBER = 3;
    private boolean hasOutgoingLinksPmi;
    private double outgoingLinksPmi_ = 0D;
    public boolean hasOutgoingLinksPmi() { return hasOutgoingLinksPmi; }
    public double getOutgoingLinksPmi() { return outgoingLinksPmi_; }
    
    // required double outgoingLinksNormalizedGoogleDistanceSim = 4;
    public static final int OUTGOINGLINKSNORMALIZEDGOOGLEDISTANCESIM_FIELD_NUMBER = 4;
    private boolean hasOutgoingLinksNormalizedGoogleDistanceSim;
    private double outgoingLinksNormalizedGoogleDistanceSim_ = 0D;
    public boolean hasOutgoingLinksNormalizedGoogleDistanceSim() { return hasOutgoingLinksNormalizedGoogleDistanceSim; }
    public double getOutgoingLinksNormalizedGoogleDistanceSim() { return outgoingLinksNormalizedGoogleDistanceSim_; }
    
    // required bool oneWayLink = 5;
    public static final int ONEWAYLINK_FIELD_NUMBER = 5;
    private boolean hasOneWayLink;
    private boolean oneWayLink_ = false;
    public boolean hasOneWayLink() { return hasOneWayLink; }
    public boolean getOneWayLink() { return oneWayLink_; }
    
    // required bool twoWayLink = 6;
    public static final int TWOWAYLINK_FIELD_NUMBER = 6;
    private boolean hasTwoWayLink;
    private boolean twoWayLink_ = false;
    public boolean hasTwoWayLink() { return hasTwoWayLink; }
    public boolean getTwoWayLink() { return twoWayLink_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasIncomingLinksPmi) return false;
      if (!hasIncomingLinksNormalizedGoogleDistanceSim) return false;
      if (!hasOutgoingLinksPmi) return false;
      if (!hasOutgoingLinksNormalizedGoogleDistanceSim) return false;
      if (!hasOneWayLink) return false;
      if (!hasTwoWayLink) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasIncomingLinksPmi()) {
        output.writeDouble(1, getIncomingLinksPmi());
      }
      if (hasIncomingLinksNormalizedGoogleDistanceSim()) {
        output.writeDouble(2, getIncomingLinksNormalizedGoogleDistanceSim());
      }
      if (hasOutgoingLinksPmi()) {
        output.writeDouble(3, getOutgoingLinksPmi());
      }
      if (hasOutgoingLinksNormalizedGoogleDistanceSim()) {
        output.writeDouble(4, getOutgoingLinksNormalizedGoogleDistanceSim());
      }
      if (hasOneWayLink()) {
        output.writeBool(5, getOneWayLink());
      }
      if (hasTwoWayLink()) {
        output.writeBool(6, getTwoWayLink());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasIncomingLinksPmi()) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, getIncomingLinksPmi());
      }
      if (hasIncomingLinksNormalizedGoogleDistanceSim()) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, getIncomingLinksNormalizedGoogleDistanceSim());
      }
      if (hasOutgoingLinksPmi()) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, getOutgoingLinksPmi());
      }
      if (hasOutgoingLinksNormalizedGoogleDistanceSim()) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, getOutgoingLinksNormalizedGoogleDistanceSim());
      }
      if (hasOneWayLink()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, getOneWayLink());
      }
      if (hasTwoWayLink()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, getTwoWayLink());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.PairwiseSemanticSim parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.PairwiseSemanticSim parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.PairwiseSemanticSim parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.PairwiseSemanticSim parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.PairwiseSemanticSim parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.PairwiseSemanticSim parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.PairwiseSemanticSim parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.PairwiseSemanticSim parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.PairwiseSemanticSim parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.PairwiseSemanticSim parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.PairwiseSemanticSim prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.PairwiseSemanticSim result;
      
      // Construct using GeneratedProtobufferCode.WikipediaProtobuffers.PairwiseSemanticSim.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.PairwiseSemanticSim();
        return builder;
      }
      
      protected edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.PairwiseSemanticSim internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.PairwiseSemanticSim();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.PairwiseSemanticSim.getDescriptor();
      }
      
      public edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.PairwiseSemanticSim getDefaultInstanceForType() {
        return edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.PairwiseSemanticSim.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.PairwiseSemanticSim build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.PairwiseSemanticSim buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.PairwiseSemanticSim buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.PairwiseSemanticSim returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.PairwiseSemanticSim) {
          return mergeFrom((edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.PairwiseSemanticSim)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.PairwiseSemanticSim other) {
        if (other == edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.PairwiseSemanticSim.getDefaultInstance()) return this;
        if (other.hasIncomingLinksPmi()) {
          setIncomingLinksPmi(other.getIncomingLinksPmi());
        }
        if (other.hasIncomingLinksNormalizedGoogleDistanceSim()) {
          setIncomingLinksNormalizedGoogleDistanceSim(other.getIncomingLinksNormalizedGoogleDistanceSim());
        }
        if (other.hasOutgoingLinksPmi()) {
          setOutgoingLinksPmi(other.getOutgoingLinksPmi());
        }
        if (other.hasOutgoingLinksNormalizedGoogleDistanceSim()) {
          setOutgoingLinksNormalizedGoogleDistanceSim(other.getOutgoingLinksNormalizedGoogleDistanceSim());
        }
        if (other.hasOneWayLink()) {
          setOneWayLink(other.getOneWayLink());
        }
        if (other.hasTwoWayLink()) {
          setTwoWayLink(other.getTwoWayLink());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 9: {
              setIncomingLinksPmi(input.readDouble());
              break;
            }
            case 17: {
              setIncomingLinksNormalizedGoogleDistanceSim(input.readDouble());
              break;
            }
            case 25: {
              setOutgoingLinksPmi(input.readDouble());
              break;
            }
            case 33: {
              setOutgoingLinksNormalizedGoogleDistanceSim(input.readDouble());
              break;
            }
            case 40: {
              setOneWayLink(input.readBool());
              break;
            }
            case 48: {
              setTwoWayLink(input.readBool());
              break;
            }
          }
        }
      }
      
      
      // required double incomingLinksPmi = 1;
      public boolean hasIncomingLinksPmi() {
        return result.hasIncomingLinksPmi();
      }
      public double getIncomingLinksPmi() {
        return result.getIncomingLinksPmi();
      }
      public Builder setIncomingLinksPmi(double value) {
        result.hasIncomingLinksPmi = true;
        result.incomingLinksPmi_ = value;
        return this;
      }
      public Builder clearIncomingLinksPmi() {
        result.hasIncomingLinksPmi = false;
        result.incomingLinksPmi_ = 0D;
        return this;
      }
      
      // required double incomingLinksNormalizedGoogleDistanceSim = 2;
      public boolean hasIncomingLinksNormalizedGoogleDistanceSim() {
        return result.hasIncomingLinksNormalizedGoogleDistanceSim();
      }
      public double getIncomingLinksNormalizedGoogleDistanceSim() {
        return result.getIncomingLinksNormalizedGoogleDistanceSim();
      }
      public Builder setIncomingLinksNormalizedGoogleDistanceSim(double value) {
        result.hasIncomingLinksNormalizedGoogleDistanceSim = true;
        result.incomingLinksNormalizedGoogleDistanceSim_ = value;
        return this;
      }
      public Builder clearIncomingLinksNormalizedGoogleDistanceSim() {
        result.hasIncomingLinksNormalizedGoogleDistanceSim = false;
        result.incomingLinksNormalizedGoogleDistanceSim_ = 0D;
        return this;
      }
      
      // required double outgoingLinksPmi = 3;
      public boolean hasOutgoingLinksPmi() {
        return result.hasOutgoingLinksPmi();
      }
      public double getOutgoingLinksPmi() {
        return result.getOutgoingLinksPmi();
      }
      public Builder setOutgoingLinksPmi(double value) {
        result.hasOutgoingLinksPmi = true;
        result.outgoingLinksPmi_ = value;
        return this;
      }
      public Builder clearOutgoingLinksPmi() {
        result.hasOutgoingLinksPmi = false;
        result.outgoingLinksPmi_ = 0D;
        return this;
      }
      
      // required double outgoingLinksNormalizedGoogleDistanceSim = 4;
      public boolean hasOutgoingLinksNormalizedGoogleDistanceSim() {
        return result.hasOutgoingLinksNormalizedGoogleDistanceSim();
      }
      public double getOutgoingLinksNormalizedGoogleDistanceSim() {
        return result.getOutgoingLinksNormalizedGoogleDistanceSim();
      }
      public Builder setOutgoingLinksNormalizedGoogleDistanceSim(double value) {
        result.hasOutgoingLinksNormalizedGoogleDistanceSim = true;
        result.outgoingLinksNormalizedGoogleDistanceSim_ = value;
        return this;
      }
      public Builder clearOutgoingLinksNormalizedGoogleDistanceSim() {
        result.hasOutgoingLinksNormalizedGoogleDistanceSim = false;
        result.outgoingLinksNormalizedGoogleDistanceSim_ = 0D;
        return this;
      }
      
      // required bool oneWayLink = 5;
      public boolean hasOneWayLink() {
        return result.hasOneWayLink();
      }
      public boolean getOneWayLink() {
        return result.getOneWayLink();
      }
      public Builder setOneWayLink(boolean value) {
        result.hasOneWayLink = true;
        result.oneWayLink_ = value;
        return this;
      }
      public Builder clearOneWayLink() {
        result.hasOneWayLink = false;
        result.oneWayLink_ = false;
        return this;
      }
      
      // required bool twoWayLink = 6;
      public boolean hasTwoWayLink() {
        return result.hasTwoWayLink();
      }
      public boolean getTwoWayLink() {
        return result.getTwoWayLink();
      }
      public Builder setTwoWayLink(boolean value) {
        result.hasTwoWayLink = true;
        result.twoWayLink_ = value;
        return this;
      }
      public Builder clearTwoWayLink() {
        result.hasTwoWayLink = false;
        result.twoWayLink_ = false;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:PairwiseSemanticSim)
    }
    
    static {
      defaultInstance = new PairwiseSemanticSim(true);
      edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:PairwiseSemanticSim)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_WikiDataSummaryProto_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_WikiDataSummaryProto_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ExtendedWikipediaData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ExtendedWikipediaData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_KeywordsInTheFirstParagraphOfWikipediaArticleProto_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_KeywordsInTheFirstParagraphOfWikipediaArticleProto_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_SurfaceFormSummaryProto_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SurfaceFormSummaryProto_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_BasicTitleDataInfoProto_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_BasicTitleDataInfoProto_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_LexicalTitleDataInfoProto_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_LexicalTitleDataInfoProto_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_SemanticTitleDataInfoProto_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SemanticTitleDataInfoProto_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_PairwiseSemanticSim_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_PairwiseSemanticSim_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\nCGoogleProtoBufferPackage/MyProtobuffer" +
      "s/WikipediaProtobuffers.proto\"\374\002\n\024WikiDa" +
      "taSummaryProto\022\026\n\016numberOfTitles\030\001 \002(\005\022\016" +
      "\n\006tokens\030\002 \003(\t\022\021\n\ttokenFids\030\003 \003(\005\022\027\n\017tok" +
      "ensIdfCounts\030\004 \003(\005\022\036\n\026possibleCoarseNerT" +
      "ypes\030\005 \003(\t\022!\n\031possibleCoarseNerTypesIds\030" +
      "\006 \003(\005\022\026\n\016possibleTopics\030\007 \003(\t\022\031\n\021possibl" +
      "eTopicsIds\030\010 \003(\005\022\"\n\032unnormalizedCategory" +
      "Tokens\030\t \003(\t\022/\n\'mappingToNormalizedCateg" +
      "oryTokenVersion\030\n \003(\t\022 \n\030normalizedCateg",
      "oryTokens\030\013 \003(\t\022#\n\033normalizedCategoryTok" +
      "ensIds\030\014 \003(\005\"\351\001\n\025ExtendedWikipediaData\022\017" +
      "\n\007titleId\030\001 \002(\005\022\"\n\032originalTextWithHyper" +
      "links\030\002 \002(\t\022\030\n\020textNoHyperlinks\030\003 \002(\t\022!\n" +
      "\031outgoingLinksSurfaceForms\030\004 \003(\t\022\033\n\023outg" +
      "oingLinksTitles\030\005 \003(\t\022\032\n\022categoriesOrigi" +
      "nal\030\006 \003(\t\022%\n\035categoriesTokenizedNormaliz" +
      "ed\030\007 \003(\t\"t\n2KeywordsInTheFirstParagraphO" +
      "fWikipediaArticleProto\022\017\n\007titleId\030\001 \002(\005\022" +
      "\022\n\nkeywordIds\030\002 \003(\005\022\031\n\021keywordIdsWeights",
      "\030\003 \003(\001\"\376\001\n\027SurfaceFormSummaryProto\022\021\n\tam" +
      "biguity\030\001 \002(\001\022\034\n\024totalAppearanceCount\030\002 " +
      "\002(\005\022\035\n\025linkedAppearanceCount\030\003 \002(\005\022\020\n\010ti" +
      "tleIds\030\004 \003(\005\022\034\n\024conditionalTitleProb\030\005 \003" +
      "(\001\022#\n\033conditionalTitleAppearances\030\006 \003(\001\022" +
      "\"\n\032conditionalSurfaceFormProb\030\007 \003(\001\022\032\n\022l" +
      "ogProbOnWebGoogle\030\010 \002(\001\"\314\001\n\027BasicTitleDa" +
      "taInfoProto\022\017\n\007titleId\030\001 \002(\005\022\030\n\020titleSur" +
      "faceForm\030\002 \002(\t\022\034\n\024titleAppearanceCount\030\003" +
      " \002(\005\022\034\n\024numberOfOugoingLinks\030\004 \002(\005\022\034\n\024nu",
      "mberOfIngoingLinks\030\005 \002(\005\022\031\n\021coarseNerTyp" +
      "esIds\030\006 \003(\005\022\021\n\ttopicsIds\030\007 \003(\005\"\217\001\n\031Lexic" +
      "alTitleDataInfoProto\022\026\n\016textTokensFids\030\001" +
      " \003(\005\022\035\n\025textTokensFidsWeights\030\002 \003(\001\022\031\n\021c" +
      "ontextTokensFids\030\003 \003(\005\022 \n\030contextTokensF" +
      "idsWeights\030\004 \003(\001\"\212\001\n\032SemanticTitleDataIn" +
      "foProto\022#\n\033normalizedCategoryTokensIds\030\001" +
      " \003(\005\022\023\n\013categoryIds\030\002 \003(\005\022\030\n\020incomingLin" +
      "ksIds\030\003 \003(\005\022\030\n\020outgoingLinksIds\030\004 \003(\005\"\325\001" +
      "\n\023PairwiseSemanticSim\022\030\n\020incomingLinksPm",
      "i\030\001 \002(\001\0220\n(incomingLinksNormalizedGoogle" +
      "DistanceSim\030\002 \002(\001\022\030\n\020outgoingLinksPmi\030\003 " +
      "\002(\001\0220\n(outgoingLinksNormalizedGoogleDist" +
      "anceSim\030\004 \002(\001\022\022\n\noneWayLink\030\005 \002(\010\022\022\n\ntwo" +
      "WayLink\030\006 \002(\010B1\n\030GeneratedProtobufferCod" +
      "eB\025WikipediaProtobuffers"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_WikiDataSummaryProto_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_WikiDataSummaryProto_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_WikiDataSummaryProto_descriptor,
              new java.lang.String[] { "NumberOfTitles", "Tokens", "TokenFids", "TokensIdfCounts", "PossibleCoarseNerTypes", "PossibleCoarseNerTypesIds", "PossibleTopics", "PossibleTopicsIds", "UnnormalizedCategoryTokens", "MappingToNormalizedCategoryTokenVersion", "NormalizedCategoryTokens", "NormalizedCategoryTokensIds", },
              edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.WikiDataSummaryProto.class,
              edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.WikiDataSummaryProto.Builder.class);
          internal_static_ExtendedWikipediaData_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_ExtendedWikipediaData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ExtendedWikipediaData_descriptor,
              new java.lang.String[] { "TitleId", "OriginalTextWithHyperlinks", "TextNoHyperlinks", "OutgoingLinksSurfaceForms", "OutgoingLinksTitles", "CategoriesOriginal", "CategoriesTokenizedNormalized", },
              edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.ExtendedWikipediaData.class,
              edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.ExtendedWikipediaData.Builder.class);
          internal_static_KeywordsInTheFirstParagraphOfWikipediaArticleProto_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_KeywordsInTheFirstParagraphOfWikipediaArticleProto_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_KeywordsInTheFirstParagraphOfWikipediaArticleProto_descriptor,
              new java.lang.String[] { "TitleId", "KeywordIds", "KeywordIdsWeights", },
              edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.KeywordsInTheFirstParagraphOfWikipediaArticleProto.class,
              edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.KeywordsInTheFirstParagraphOfWikipediaArticleProto.Builder.class);
          internal_static_SurfaceFormSummaryProto_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_SurfaceFormSummaryProto_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_SurfaceFormSummaryProto_descriptor,
              new java.lang.String[] { "Ambiguity", "TotalAppearanceCount", "LinkedAppearanceCount", "TitleIds", "ConditionalTitleProb", "ConditionalTitleAppearances", "ConditionalSurfaceFormProb", "LogProbOnWebGoogle", },
              edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.SurfaceFormSummaryProto.class,
              edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.SurfaceFormSummaryProto.Builder.class);
          internal_static_BasicTitleDataInfoProto_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_BasicTitleDataInfoProto_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_BasicTitleDataInfoProto_descriptor,
              new java.lang.String[] { "TitleId", "TitleSurfaceForm", "TitleAppearanceCount", "NumberOfOugoingLinks", "NumberOfIngoingLinks", "CoarseNerTypesIds", "TopicsIds", },
              edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.BasicTitleDataInfoProto.class,
              edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.BasicTitleDataInfoProto.Builder.class);
          internal_static_LexicalTitleDataInfoProto_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_LexicalTitleDataInfoProto_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_LexicalTitleDataInfoProto_descriptor,
              new java.lang.String[] { "TextTokensFids", "TextTokensFidsWeights", "ContextTokensFids", "ContextTokensFidsWeights", },
              edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.LexicalTitleDataInfoProto.class,
              edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.LexicalTitleDataInfoProto.Builder.class);
          internal_static_SemanticTitleDataInfoProto_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_SemanticTitleDataInfoProto_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_SemanticTitleDataInfoProto_descriptor,
              new java.lang.String[] { "NormalizedCategoryTokensIds", "CategoryIds", "IncomingLinksIds", "OutgoingLinksIds", },
              edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.SemanticTitleDataInfoProto.class,
              edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.SemanticTitleDataInfoProto.Builder.class);
          internal_static_PairwiseSemanticSim_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_PairwiseSemanticSim_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_PairwiseSemanticSim_descriptor,
              new java.lang.String[] { "IncomingLinksPmi", "IncomingLinksNormalizedGoogleDistanceSim", "OutgoingLinksPmi", "OutgoingLinksNormalizedGoogleDistanceSim", "OneWayLink", "TwoWayLink", },
              edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.PairwiseSemanticSim.class,
              edu.illinois.cs.cogcomp.wikifier.models.WikipediaProtobuffers.PairwiseSemanticSim.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
